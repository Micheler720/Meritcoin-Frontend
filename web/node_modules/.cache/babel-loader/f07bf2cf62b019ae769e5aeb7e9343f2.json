{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/media/michele/Acer/Users/miche/Desktop/PROJETOS/meritial/web/src/pages/Register/User/UserRegister/index.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useCallback, useMemo, useRef } from 'react';\nimport { FiMail, FiUser } from 'react-icons/fi';\nimport { ImProfile } from 'react-icons/im';\nimport { Form } from '@unform/web';\nimport * as Yup from 'yup';\nimport { AiOutlineUsergroupAdd } from 'react-icons/ai';\nimport Button from '../../../../components/Button';\nimport Container from '../../../../components/Container';\nimport Input from '../../../../components/Input';\nimport Select from '../../../../components/Select';\nimport { Content } from './styles';\nimport getValidationErrors from '../../../../util/getValidationErrors';\nimport { useToast } from '../../../../hooks/toast';\n\nconst UserRegister = () => {\n  _s();\n\n  const formRef = useRef(null);\n  const {\n    addToast\n  } = useToast();\n  const groupUsers = useMemo(() => {\n    return [{\n      value: '1',\n      description: 'Belo Horizonte'\n    }, {\n      value: '2',\n      description: 'Distrito Federal'\n    }, {\n      value: '1',\n      description: 'Brasilia'\n    }];\n  }, []);\n  const profilesUser = useMemo(() => {\n    return [{\n      value: '1',\n      description: 'Administrador'\n    }, {\n      value: '2',\n      description: 'Usuário'\n    }];\n  }, []);\n  const handleSubmit = useCallback(async data => {\n    var _formRef$current;\n\n    (_formRef$current = formRef.current) === null || _formRef$current === void 0 ? void 0 : _formRef$current.setErrors({});\n\n    try {\n      const schema = Yup.object().shape({\n        name: Yup.string().required('Obrigatório informar o nome.'),\n        email: Yup.string().required('Obrigatório informar o e-mail.')\n      });\n      await schema.validate(data);\n    } catch (err) {\n      if (err instanceof Yup.ValidationError) {\n        var _formRef$current2;\n\n        const errors = getValidationErrors(err);\n        (_formRef$current2 = formRef.current) === null || _formRef$current2 === void 0 ? void 0 : _formRef$current2.setErrors(errors);\n        return;\n      }\n\n      addToast({\n        title: 'Houve um erro ao cadastrar usuário.',\n        description: 'Entre em contato com suporte técnico para verificar a falha.',\n        type: 'error'\n      });\n    }\n  }, [addToast]);\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: /*#__PURE__*/_jsxDEV(Content, {\n      children: /*#__PURE__*/_jsxDEV(Form, {\n        ref: formRef,\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(Input, {\n          name: \"name\",\n          type: \"text\",\n          placeholder: \"Nome\",\n          icon: FiUser\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Input, {\n          name: \"email\",\n          type: \"email\",\n          placeholder: \"E-mail\",\n          icon: FiMail\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Select, {\n          name: \"Grupo Usu\\xE1rio\",\n          data: groupUsers,\n          icon: AiOutlineUsergroupAdd\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Select, {\n          name: \"Perfil de Acesso\",\n          data: groupUsers,\n          icon: ImProfile\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          buttonType: \"success\",\n          children: \"Criar Usuario\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 78,\n    columnNumber: 5\n  }, this);\n};\n\n_s(UserRegister, \"k58gY0fUOdYuaX7coA4wS+de9AQ=\", false, function () {\n  return [useToast];\n});\n\n_c = UserRegister;\nexport default UserRegister;\n\nvar _c;\n\n$RefreshReg$(_c, \"UserRegister\");","map":{"version":3,"sources":["/media/michele/Acer/Users/miche/Desktop/PROJETOS/meritial/web/src/pages/Register/User/UserRegister/index.tsx"],"names":["React","useCallback","useMemo","useRef","FiMail","FiUser","ImProfile","Form","Yup","AiOutlineUsergroupAdd","Button","Container","Input","Select","Content","getValidationErrors","useToast","UserRegister","formRef","addToast","groupUsers","value","description","profilesUser","handleSubmit","data","current","setErrors","schema","object","shape","name","string","required","email","validate","err","ValidationError","errors","title","type"],"mappings":"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","sourcesContent":["import React, { useCallback, useMemo, useRef } from 'react';\nimport { FiMail, FiUser } from 'react-icons/fi';\nimport { ImProfile } from 'react-icons/im';\nimport { Form } from '@unform/web';\nimport { FormHandles } from '@unform/core';\nimport * as Yup from 'yup';\nimport { AiOutlineUsergroupAdd } from 'react-icons/ai';\nimport Button from '../../../../components/Button';\nimport Container from '../../../../components/Container';\nimport Input from '../../../../components/Input';\nimport Select from '../../../../components/Select';\nimport { Content } from './styles';\nimport getValidationErrors from '../../../../util/getValidationErrors';\nimport { useToast } from '../../../../hooks/toast';\n\ninterface FormData {\n  name: string;\n  email: string;\n}\n\nconst UserRegister: React.FC = () => {\n  const formRef = useRef<FormHandles>(null);\n  const { addToast } = useToast();\n  const groupUsers = useMemo(() => {\n    return [\n      {\n        value: '1',\n        description: 'Belo Horizonte',\n      },\n      {\n        value: '2',\n        description: 'Distrito Federal',\n      },\n      {\n        value: '1',\n        description: 'Brasilia',\n      },\n    ];\n  }, []);\n  const profilesUser = useMemo(() => {\n    return [\n      {\n        value: '1',\n        description: 'Administrador',\n      },\n      {\n        value: '2',\n        description: 'Usuário',\n      },\n    ];\n  }, []);\n  const handleSubmit = useCallback(\n    async (data: FormData) => {\n      formRef.current?.setErrors({});\n      try {\n        const schema = Yup.object().shape({\n          name: Yup.string().required('Obrigatório informar o nome.'),\n          email: Yup.string().required('Obrigatório informar o e-mail.'),\n        });\n        await schema.validate(data);\n      } catch (err) {\n        if (err instanceof Yup.ValidationError) {\n          const errors = getValidationErrors(err);\n          formRef.current?.setErrors(errors);\n          return;\n        }\n        addToast({\n          title: 'Houve um erro ao cadastrar usuário.',\n          description:\n            'Entre em contato com suporte técnico para verificar a falha.',\n          type: 'error',\n        });\n      }\n    },\n    [addToast],\n  );\n  return (\n    <Container>\n      <Content>\n        <Form ref={formRef} onSubmit={handleSubmit}>\n          <Input name=\"name\" type=\"text\" placeholder=\"Nome\" icon={FiUser} />\n          <Input name=\"email\" type=\"email\" placeholder=\"E-mail\" icon={FiMail} />\n          <Select\n            name=\"Grupo Usuário\"\n            data={groupUsers}\n            icon={AiOutlineUsergroupAdd}\n          />\n          <Select name=\"Perfil de Acesso\" data={groupUsers} icon={ImProfile} />\n\n          <Button type=\"submit\" buttonType=\"success\">\n            Criar Usuario\n          </Button>\n        </Form>\n      </Content>\n    </Container>\n  );\n};\n\nexport default UserRegister;\n"]},"metadata":{},"sourceType":"module"}