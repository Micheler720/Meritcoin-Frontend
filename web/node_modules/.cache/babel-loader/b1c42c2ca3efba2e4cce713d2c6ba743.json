{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/media/michele/Acer/Users/miche/Desktop/PROJETOS/meritial/src/pages/Profile/index.tsx\",\n    _s = $RefreshSig$();\n\nimport { Form } from '@unform/web';\nimport React, { useCallback, useRef } from 'react';\nimport * as Yup from 'yup';\nimport { FiCamera } from 'react-icons/fi';\nimport Container from '../../components/Container';\nimport Input from '../../components/Input';\nimport { Content, ProfileAvatar } from './styles';\nimport getValidationErrors from '../../util/getValidationErrors';\nimport { useToast } from '../../hooks/toast';\n\nconst Profile = () => {\n  _s();\n\n  const formRef = useRef(null);\n  const {\n    addToast\n  } = useToast();\n  const handleSubmit = useCallback(async data => {\n    var _formRef$current;\n\n    (_formRef$current = formRef.current) === null || _formRef$current === void 0 ? void 0 : _formRef$current.setErrors({});\n\n    try {\n      const schema = Yup.object().shape({\n        old_password: Yup.string(),\n        password: Yup.string(),\n        password_confirmation: Yup.string().oneOf([Yup.ref('password')], 'Senhas não coincidem')\n      });\n      await schema.validate(data);\n      addToast({\n        title: 'Usuário atualizado com sucesso',\n        type: 'success'\n      });\n    } catch (err) {\n      if (err instanceof Yup.ValidationError) {\n        var _formRef$current2;\n\n        const errors = getValidationErrors(err);\n        (_formRef$current2 = formRef.current) === null || _formRef$current2 === void 0 ? void 0 : _formRef$current2.setErrors(errors);\n        return;\n      }\n\n      addToast({\n        title: 'Erro ao atualizar Perfil',\n        type: 'error',\n        description: 'Houve um erro ao atualizar perfil do usuário'\n      });\n    }\n  }, [addToast]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Container, {\n      children: /*#__PURE__*/_jsxDEV(Content, {\n        children: [/*#__PURE__*/_jsxDEV(ProfileAvatar, {\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: \"https://avatars2.githubusercontent.com/u/48379411?s=460&u=94dabeb8a22a6181fc4686a5bee1e608fa477f86&v=4\",\n            alt: \"Usu\\xE1rio\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"avatar\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"file\",\n              name: \"avatar\",\n              id: \"avatar \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 66,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(FiCamera, {\n              size: 25,\n              color: \"#ffffff\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form, {\n          ref: formRef,\n          onSubmit: handleSubmit,\n          children: [/*#__PURE__*/_jsxDEV(Input, {\n            name: \"old_password\",\n            placeholder: \"Senha Atual\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Input, {\n            name: \"password\",\n            placeholder: \"Nova Senha\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Input, {\n            name: \"password_confirmation\",\n            placeholder: \"Confirmar Senha\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n\n_s(Profile, \"0efCcQ4iJVfMztjcprC8DZzPJkU=\", false, function () {\n  return [useToast];\n});\n\n_c = Profile;\nexport default Profile;\n\nvar _c;\n\n$RefreshReg$(_c, \"Profile\");","map":{"version":3,"sources":["/media/michele/Acer/Users/miche/Desktop/PROJETOS/meritial/src/pages/Profile/index.tsx"],"names":["Form","React","useCallback","useRef","Yup","FiCamera","Container","Input","Content","ProfileAvatar","getValidationErrors","useToast","Profile","formRef","addToast","handleSubmit","data","current","setErrors","schema","object","shape","old_password","string","password","password_confirmation","oneOf","ref","validate","title","type","err","ValidationError","errors","description"],"mappings":"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","sourcesContent":["import { FormHandles } from '@unform/core';\nimport { Form } from '@unform/web';\nimport React, { useCallback, useRef } from 'react';\nimport * as Yup from 'yup';\nimport { FiCamera } from 'react-icons/fi';\nimport Container from '../../components/Container';\nimport Input from '../../components/Input';\nimport { Content, ProfileAvatar } from './styles';\nimport getValidationErrors from '../../util/getValidationErrors';\nimport { useToast } from '../../hooks/toast';\n\ninterface FormData {\n  password: string;\n  old_password: string;\n  password_confirmation: string;\n}\n\nconst Profile: React.FC = () => {\n  const formRef = useRef<FormHandles>(null);\n  const { addToast } = useToast();\n\n  const handleSubmit = useCallback(\n    async (data: FormData) => {\n      formRef.current?.setErrors({});\n\n      try {\n        const schema = Yup.object().shape({\n          old_password: Yup.string(),\n          password: Yup.string(),\n          password_confirmation: Yup.string().oneOf(\n            [Yup.ref('password')],\n            'Senhas não coincidem',\n          ),\n        });\n\n        await schema.validate(data);\n        addToast({\n          title: 'Usuário atualizado com sucesso',\n          type: 'success',\n        });\n      } catch (err) {\n        if (err instanceof Yup.ValidationError) {\n          const errors = getValidationErrors(err);\n          formRef.current?.setErrors(errors);\n          return;\n        }\n        addToast({\n          title: 'Erro ao atualizar Perfil',\n          type: 'error',\n          description: 'Houve um erro ao atualizar perfil do usuário',\n        });\n      }\n    },\n    [addToast],\n  );\n  return (\n    <>\n      <Container>\n        <Content>\n          <ProfileAvatar>\n            <img\n              src=\"https://avatars2.githubusercontent.com/u/48379411?s=460&u=94dabeb8a22a6181fc4686a5bee1e608fa477f86&v=4\"\n              alt=\"Usuário\"\n            />\n            <label htmlFor=\"avatar\">\n              <input type=\"file\" name=\"avatar\" id=\"avatar \" />\n              <FiCamera size={25} color=\"#ffffff\" />\n            </label>\n          </ProfileAvatar>\n          <Form ref={formRef} onSubmit={handleSubmit}>\n            <Input name=\"old_password\" placeholder=\"Senha Atual\" />\n            <Input name=\"password\" placeholder=\"Nova Senha\" />\n            <Input name=\"password_confirmation\" placeholder=\"Confirmar Senha\" />\n          </Form>\n        </Content>\n      </Container>\n    </>\n  );\n};\n\nexport default Profile;\n"]},"metadata":{},"sourceType":"module"}