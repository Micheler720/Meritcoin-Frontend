{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/media/michele/Acer/Users/miche/Desktop/PROJETOS/meritial/web/src/components/Select/index.tsx\",\n    _s = $RefreshSig$();\n\nimport { useField } from '@unform/core';\nimport React, { useCallback, useEffect, useRef, useState } from 'react';\nimport { FiAlertCircle } from 'react-icons/fi';\nimport { Container, Error } from './styles';\n\nconst Select = ({\n  name,\n  icon: Icon,\n  data,\n  classNameContainer,\n  ...props\n}) => {\n  _s();\n\n  const selectRef = useRef(null);\n  const {\n    defaultValue,\n    error,\n    fieldName,\n    registerField\n  } = useField(name);\n  useEffect(() => {\n    registerField({\n      name: fieldName,\n      ref: selectRef.current,\n      path: 'value'\n    });\n  }, [fieldName, registerField]);\n  const [isFilled, setIsFilled] = useState(false);\n  const handleSelectBlur = useCallback(() => {\n    var _selectRef$current;\n\n    setIsFilled(!!((_selectRef$current = selectRef.current) === null || _selectRef$current === void 0 ? void 0 : _selectRef$current.value));\n  }, []);\n  return /*#__PURE__*/_jsxDEV(Container, {\n    isError: !!error,\n    isFilled: isFilled,\n    children: [Icon && /*#__PURE__*/_jsxDEV(Icon, {\n      size: 20\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 16\n    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n      name: name,\n      onBlur: handleSelectBlur,\n      defaultValue: defaultValue,\n      ref: selectRef,\n      ...props,\n      children: data.map(({\n        value,\n        description\n      }) => /*#__PURE__*/_jsxDEV(\"option\", {\n        value: value,\n        children: description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(Error, {\n      title: error,\n      children: /*#__PURE__*/_jsxDEV(FiAlertCircle, {\n        color: \"#c53030\",\n        size: 20\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Select, \"a9rOPUqSf20UMJsz9LOcnwhy1dY=\", false, function () {\n  return [useField];\n});\n\n_c = Select;\nexport default Select;\n\nvar _c;\n\n$RefreshReg$(_c, \"Select\");","map":{"version":3,"sources":["/media/michele/Acer/Users/miche/Desktop/PROJETOS/meritial/web/src/components/Select/index.tsx"],"names":["useField","React","useCallback","useEffect","useRef","useState","FiAlertCircle","Container","Error","Select","name","icon","Icon","data","classNameContainer","props","selectRef","defaultValue","error","fieldName","registerField","ref","current","path","isFilled","setIsFilled","handleSelectBlur","value","map","description"],"mappings":";;;;;AAAA,SAASA,QAAT,QAAyB,cAAzB;AACA,OAAOC,KAAP,IAEEC,WAFF,EAGEC,SAHF,EAIEC,MAJF,EAKEC,QALF,QAMO,OANP;AAOA,SAASC,aAAT,QAA8B,gBAA9B;AAEA,SAASC,SAAT,EAAoBC,KAApB,QAAiC,UAAjC;;AAcA,MAAMC,MAA6B,GAAG,CAAC;AACrCC,EAAAA,IADqC;AAErCC,EAAAA,IAAI,EAAEC,IAF+B;AAGrCC,EAAAA,IAHqC;AAIrCC,EAAAA,kBAJqC;AAKrC,KAAGC;AALkC,CAAD,KAMhC;AAAA;;AACJ,QAAMC,SAAS,GAAGZ,MAAM,CAAoB,IAApB,CAAxB;AAEA,QAAM;AAAEa,IAAAA,YAAF;AAAgBC,IAAAA,KAAhB;AAAuBC,IAAAA,SAAvB;AAAkCC,IAAAA;AAAlC,MAAoDpB,QAAQ,CAACU,IAAD,CAAlE;AAEAP,EAAAA,SAAS,CAAC,MAAM;AACdiB,IAAAA,aAAa,CAAC;AACZV,MAAAA,IAAI,EAAES,SADM;AAEZE,MAAAA,GAAG,EAAEL,SAAS,CAACM,OAFH;AAGZC,MAAAA,IAAI,EAAE;AAHM,KAAD,CAAb;AAKD,GANQ,EAMN,CAACJ,SAAD,EAAYC,aAAZ,CANM,CAAT;AAQA,QAAM,CAACI,QAAD,EAAWC,WAAX,IAA0BpB,QAAQ,CAAC,KAAD,CAAxC;AACA,QAAMqB,gBAAgB,GAAGxB,WAAW,CAAC,MAAM;AAAA;;AACzCuB,IAAAA,WAAW,CAAC,CAAC,wBAACT,SAAS,CAACM,OAAX,uDAAC,mBAAmBK,KAApB,CAAF,CAAX;AACD,GAFmC,EAEjC,EAFiC,CAApC;AAIA,sBACE,QAAC,SAAD;AAAW,IAAA,OAAO,EAAE,CAAC,CAACT,KAAtB;AAA6B,IAAA,QAAQ,EAAEM,QAAvC;AAAA,eACGZ,IAAI,iBAAI,QAAC,IAAD;AAAM,MAAA,IAAI,EAAE;AAAZ;AAAA;AAAA;AAAA;AAAA,YADX,eAEE;AACE,MAAA,IAAI,EAAEF,IADR;AAEE,MAAA,MAAM,EAAEgB,gBAFV;AAGE,MAAA,YAAY,EAAET,YAHhB;AAIE,MAAA,GAAG,EAAED,SAJP;AAAA,SAKMD,KALN;AAAA,gBAOGF,IAAI,CAACe,GAAL,CAAS,CAAC;AAAED,QAAAA,KAAF;AAASE,QAAAA;AAAT,OAAD,kBACR;AAAQ,QAAA,KAAK,EAAEF,KAAf;AAAA,kBAAuBE;AAAvB;AAAA;AAAA;AAAA;AAAA,cADD;AAPH;AAAA;AAAA;AAAA;AAAA,YAFF,EAaGX,KAAK,iBACJ,QAAC,KAAD;AAAO,MAAA,KAAK,EAAEA,KAAd;AAAA,6BACE,QAAC,aAAD;AAAe,QAAA,KAAK,EAAC,SAArB;AAA+B,QAAA,IAAI,EAAE;AAArC;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAdJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAqBD,CA7CD;;GAAMT,M;UASsDT,Q;;;KATtDS,M;AA+CN,eAAeA,MAAf","sourcesContent":["import { useField } from '@unform/core';\nimport React, {\n  SelectHTMLAttributes,\n  useCallback,\n  useEffect,\n  useRef,\n  useState,\n} from 'react';\nimport { FiAlertCircle } from 'react-icons/fi';\nimport { IconBaseProps } from 'react-icons/lib';\nimport { Container, Error } from './styles';\n\ninterface SelectProps extends SelectHTMLAttributes<HTMLSelectElement> {\n  icon?: React.ComponentType<IconBaseProps>;\n  name: string;\n  data: SelectDataItem[];\n  classNameContainer?: string;\n}\n\ninterface SelectDataItem {\n  value: string | number;\n  description: string | number;\n}\n\nconst Select: React.FC<SelectProps> = ({\n  name,\n  icon: Icon,\n  data,\n  classNameContainer,\n  ...props\n}) => {\n  const selectRef = useRef<HTMLSelectElement>(null);\n\n  const { defaultValue, error, fieldName, registerField } = useField(name);\n\n  useEffect(() => {\n    registerField({\n      name: fieldName,\n      ref: selectRef.current,\n      path: 'value',\n    });\n  }, [fieldName, registerField]);\n\n  const [isFilled, setIsFilled] = useState(false);\n  const handleSelectBlur = useCallback(() => {\n    setIsFilled(!!selectRef.current?.value);\n  }, []);\n\n  return (\n    <Container isError={!!error} isFilled={isFilled}>\n      {Icon && <Icon size={20} />}\n      <select\n        name={name}\n        onBlur={handleSelectBlur}\n        defaultValue={defaultValue}\n        ref={selectRef}\n        {...props}\n      >\n        {data.map(({ value, description }) => (\n          <option value={value}>{description}</option>\n        ))}\n      </select>\n      {error && (\n        <Error title={error}>\n          <FiAlertCircle color=\"#c53030\" size={20} />\n        </Error>\n      )}\n    </Container>\n  );\n};\n\nexport default Select;\n"]},"metadata":{},"sourceType":"module"}