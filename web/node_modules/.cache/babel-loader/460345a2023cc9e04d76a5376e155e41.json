{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/media/michele/Acer/Users/miche/Desktop/PROJETOS/meritial/web/src/hooks/alert.tsx\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React, { createContext, useCallback, useContext, useState } from 'react';\nimport Alert from '../components/Alert';\nconst AlertContext = /*#__PURE__*/createContext({});\nexport const AlertMessage = ({\n  children\n}) => {\n  _s();\n\n  const [alert, setAlert] = useState({});\n  const addAlert = useCallback(async ({\n    message,\n    type,\n    ...props\n  }) => {\n    setAlert({\n      message,\n      type,\n      ...props\n    });\n  }, []);\n  const handleConfirmation = useCallback(response => {\n    setConfirmation(response);\n    console.log(confirmation);\n  }, [confirmation]);\n  return /*#__PURE__*/_jsxDEV(AlertContext.Provider, {\n    value: {\n      addAlert,\n      confirmation\n    },\n    children: /*#__PURE__*/_jsxDEV(Alert, {\n      message: alert.message,\n      type: alert.type,\n      primaryButton: handleConfirmation,\n      children: children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n};\n\n_s(AlertMessage, \"O4+ZzG7ntEDKvO/pMHBoYUFcTwM=\");\n\n_c = AlertMessage;\nexport function useAlert() {\n  _s2();\n\n  const context = useContext(AlertContext);\n\n  if (!context) {\n    throw new Error('useAuth must be used within an AuthProvider.');\n  }\n\n  return context;\n}\n\n_s2(useAlert, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\n\nvar _c;\n\n$RefreshReg$(_c, \"AlertMessage\");","map":{"version":3,"sources":["/media/michele/Acer/Users/miche/Desktop/PROJETOS/meritial/web/src/hooks/alert.tsx"],"names":["React","createContext","useCallback","useContext","useState","Alert","AlertContext","AlertMessage","children","alert","setAlert","addAlert","message","type","props","handleConfirmation","response","setConfirmation","console","log","confirmation","useAlert","context","Error"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,aAAhB,EAA+BC,WAA/B,EAA4CC,UAA5C,EAAwDC,QAAxD,QAAwE,OAAxE;AACA,OAAOC,KAAP,MAAkB,qBAAlB;AAcA,MAAMC,YAAY,gBAAGL,aAAa,CAAoB,EAApB,CAAlC;AAEA,OAAO,MAAMM,YAAsB,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAkB;AAAA;;AACtD,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBN,QAAQ,CAAW,EAAX,CAAlC;AAEA,QAAMO,QAAQ,GAAGT,WAAW,CAC1B,OAAO;AAAEU,IAAAA,OAAF;AAAWC,IAAAA,IAAX;AAAiB,OAAGC;AAApB,GAAP,KAAgE;AAC9DJ,IAAAA,QAAQ,CAAC;AACPE,MAAAA,OADO;AAEPC,MAAAA,IAFO;AAGP,SAAGC;AAHI,KAAD,CAAR;AAKD,GAPyB,EAQ1B,EAR0B,CAA5B;AAWA,QAAMC,kBAAkB,GAAGb,WAAW,CACnCc,QAAD,IAA6B;AAC3BC,IAAAA,eAAe,CAACD,QAAD,CAAf;AACAE,IAAAA,OAAO,CAACC,GAAR,CAAYC,YAAZ;AACD,GAJmC,EAKpC,CAACA,YAAD,CALoC,CAAtC;AAQA,sBACE,QAAC,YAAD,CAAc,QAAd;AAAuB,IAAA,KAAK,EAAE;AAAET,MAAAA,QAAF;AAAYS,MAAAA;AAAZ,KAA9B;AAAA,2BACE,QAAC,KAAD;AACE,MAAA,OAAO,EAAEX,KAAK,CAACG,OADjB;AAEE,MAAA,IAAI,EAAEH,KAAK,CAACI,IAFd;AAGE,MAAA,aAAa,EAAEE,kBAHjB;AAAA,gBAKGP;AALH;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAWD,CAjCM;;GAAMD,Y;;KAAAA,Y;AAmCb,OAAO,SAASc,QAAT,GAAoB;AAAA;;AACzB,QAAMC,OAAO,GAAGnB,UAAU,CAACG,YAAD,CAA1B;;AACA,MAAI,CAACgB,OAAL,EAAc;AACZ,UAAM,IAAIC,KAAJ,CAAU,8CAAV,CAAN;AACD;;AACD,SAAOD,OAAP;AACD;;IANeD,Q","sourcesContent":["import React, { createContext, useCallback, useContext, useState } from 'react';\nimport Alert from '../components/Alert';\n\ninterface ICreateAlertProps {\n  addAlert(data: IMessage): void;\n}\ninterface IMessage {\n  message: string;\n  type?: 'error' | 'confirmation' | 'alert' | 'success';\n  primaryButton?(): void;\n  secundaryButton?(): void;\n  titlePrimaryButton?: string;\n  titleSecondaryButton?: string;\n}\n\nconst AlertContext = createContext<ICreateAlertProps>({} as ICreateAlertProps);\n\nexport const AlertMessage: React.FC = ({ children }) => {\n  const [alert, setAlert] = useState<IMessage>({} as IMessage);\n\n  const addAlert = useCallback(\n    async ({ message, type, ...props }: IMessage): Promise<void> => {\n      setAlert({\n        message,\n        type,\n        ...props,\n      });\n    },\n    [],\n  );\n\n  const handleConfirmation = useCallback(\n    (response: boolean): void => {\n      setConfirmation(response);\n      console.log(confirmation);\n    },\n    [confirmation],\n  );\n\n  return (\n    <AlertContext.Provider value={{ addAlert, confirmation }}>\n      <Alert\n        message={alert.message}\n        type={alert.type}\n        primaryButton={handleConfirmation}\n      >\n        {children}\n      </Alert>\n    </AlertContext.Provider>\n  );\n};\n\nexport function useAlert() {\n  const context = useContext(AlertContext);\n  if (!context) {\n    throw new Error('useAuth must be used within an AuthProvider.');\n  }\n  return context;\n}\n"]},"metadata":{},"sourceType":"module"}