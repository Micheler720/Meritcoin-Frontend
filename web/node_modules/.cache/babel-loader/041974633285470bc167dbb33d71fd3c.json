{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/media/michele/Acer/Users/miche/Desktop/PROJETOS/meritial/src/hooks/menu.tsx\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React, { createContext, useCallback, useContext, useState } from 'react';\nimport { useSpring } from 'react-spring';\nimport Menu from '../components/Menu';\nconst MenuContext = /*#__PURE__*/createContext({});\nexport const MenuVisible = ({\n  children\n}) => {\n  _s();\n\n  const [isVisibleMenu, setIsVisible] = useState(false);\n  const menuTransictions = useSpring({\n    to: {\n      opacity: isVisibleMenu ? 1 : 0,\n      display: isVisibleMenu ? 'flex' : 'none',\n      transition: '0.2s'\n    },\n    from: {\n      opacity: isVisibleMenu ? 0 : 1,\n      display: isVisibleMenu ? 'none' : 'flex',\n      transition: '2s'\n    }\n  });\n  const setIsVisibleMenu = useCallback(isVisible => {\n    setIsVisible(isVisible);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(MenuContext.Provider, {\n    value: {\n      isVisibleMenu,\n      setIsVisibleMenu\n    },\n    children: [/*#__PURE__*/_jsxDEV(Menu, {\n      style: menuTransictions,\n      isVisibleMenu: isVisibleMenu\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), children]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n};\n\n_s(MenuVisible, \"0732tQizZ59jbAATVj6doy05PiI=\", false, function () {\n  return [useSpring];\n});\n\n_c = MenuVisible;\nexport function useMenu() {\n  _s2();\n\n  const context = useContext(MenuContext);\n\n  if (!context) {\n    throw new Error('useMenu must be used within an AuthProvider.');\n  }\n\n  return context;\n}\n\n_s2(useMenu, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\n\nvar _c;\n\n$RefreshReg$(_c, \"MenuVisible\");","map":{"version":3,"sources":["/media/michele/Acer/Users/miche/Desktop/PROJETOS/meritial/src/hooks/menu.tsx"],"names":["React","createContext","useCallback","useContext","useState","useSpring","Menu","MenuContext","MenuVisible","children","isVisibleMenu","setIsVisible","menuTransictions","to","opacity","display","transition","from","setIsVisibleMenu","isVisible","useMenu","context","Error"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,aAAhB,EAA+BC,WAA/B,EAA4CC,UAA5C,EAAwDC,QAAxD,QAAwE,OAAxE;AACA,SAASC,SAAT,QAA0B,cAA1B;AACA,OAAOC,IAAP,MAAiB,oBAAjB;AAOA,MAAMC,WAAW,gBAAGN,aAAa,CAAqB,EAArB,CAAjC;AAEA,OAAO,MAAMO,WAAqB,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAkB;AAAA;;AACrD,QAAM,CAACC,aAAD,EAAgBC,YAAhB,IAAgCP,QAAQ,CAAC,KAAD,CAA9C;AAEA,QAAMQ,gBAAgB,GAAGP,SAAS,CAAC;AACjCQ,IAAAA,EAAE,EAAE;AACFC,MAAAA,OAAO,EAAEJ,aAAa,GAAG,CAAH,GAAO,CAD3B;AAEFK,MAAAA,OAAO,EAAEL,aAAa,GAAG,MAAH,GAAY,MAFhC;AAGFM,MAAAA,UAAU,EAAE;AAHV,KAD6B;AAMjCC,IAAAA,IAAI,EAAE;AACJH,MAAAA,OAAO,EAAEJ,aAAa,GAAG,CAAH,GAAO,CADzB;AAEJK,MAAAA,OAAO,EAAEL,aAAa,GAAG,MAAH,GAAY,MAF9B;AAGJM,MAAAA,UAAU,EAAE;AAHR;AAN2B,GAAD,CAAlC;AAaA,QAAME,gBAAgB,GAAGhB,WAAW,CAAEiB,SAAD,IAAwB;AAC3DR,IAAAA,YAAY,CAACQ,SAAD,CAAZ;AACD,GAFmC,EAEjC,EAFiC,CAApC;AAIA,sBACE,QAAC,WAAD,CAAa,QAAb;AAAsB,IAAA,KAAK,EAAE;AAAET,MAAAA,aAAF;AAAiBQ,MAAAA;AAAjB,KAA7B;AAAA,4BACE,QAAC,IAAD;AAAM,MAAA,KAAK,EAAEN,gBAAb;AAA+B,MAAA,aAAa,EAAEF;AAA9C;AAAA;AAAA;AAAA;AAAA,YADF,EAEGD,QAFH;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAMD,CA1BM;;GAAMD,W;UAGcH,S;;;KAHdG,W;AA4Bb,OAAO,SAASY,OAAT,GAAuC;AAAA;;AAC5C,QAAMC,OAAO,GAAGlB,UAAU,CAACI,WAAD,CAA1B;;AACA,MAAI,CAACc,OAAL,EAAc;AACZ,UAAM,IAAIC,KAAJ,CAAU,8CAAV,CAAN;AACD;;AACD,SAAOD,OAAP;AACD;;IANeD,O","sourcesContent":["import React, { createContext, useCallback, useContext, useState } from 'react';\nimport { useSpring } from 'react-spring';\nimport Menu from '../components/Menu';\n\ninterface IMenuContextCreate {\n  isVisibleMenu: boolean;\n  setIsVisibleMenu(isVisible: boolean): void;\n}\n\nconst MenuContext = createContext<IMenuContextCreate>({} as IMenuContextCreate);\n\nexport const MenuVisible: React.FC = ({ children }) => {\n  const [isVisibleMenu, setIsVisible] = useState(false);\n\n  const menuTransictions = useSpring({\n    to: {\n      opacity: isVisibleMenu ? 1 : 0,\n      display: isVisibleMenu ? 'flex' : 'none',\n      transition: '0.2s',\n    },\n    from: {\n      opacity: isVisibleMenu ? 0 : 1,\n      display: isVisibleMenu ? 'none' : 'flex',\n      transition: '2s',\n    },\n  });\n\n  const setIsVisibleMenu = useCallback((isVisible: boolean) => {\n    setIsVisible(isVisible);\n  }, []);\n\n  return (\n    <MenuContext.Provider value={{ isVisibleMenu, setIsVisibleMenu }}>\n      <Menu style={menuTransictions} isVisibleMenu={isVisibleMenu} />\n      {children}\n    </MenuContext.Provider>\n  );\n};\n\nexport function useMenu(): IMenuContextCreate {\n  const context = useContext(MenuContext);\n  if (!context) {\n    throw new Error('useMenu must be used within an AuthProvider.');\n  }\n  return context;\n}\n"]},"metadata":{},"sourceType":"module"}