{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/media/michele/Acer/Users/miche/Desktop/PROJETOS/meritial/web/src/components/Button/index.tsx\";\nimport React from 'react';\nimport Loading from './Loading';\nimport { Container } from './styles';\n\nconst Button = ({\n  buttonType,\n  children,\n  eventLoading,\n  loading,\n  ...rest\n}) => /*#__PURE__*/_jsxDEV(Container, {\n  buttonType: buttonType,\n  type: \"button\",\n  ...rest,\n  isLoading: loading,\n  disabled: loading,\n  children: loading ? /*#__PURE__*/_jsxDEV(Loading, {\n    eventLoading: eventLoading\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 16\n  }, this) : children\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 18,\n  columnNumber: 3\n}, this);\n\n_c = Button;\nexport default Button;\n\nvar _c;\n\n$RefreshReg$(_c, \"Button\");","map":{"version":3,"sources":["/media/michele/Acer/Users/miche/Desktop/PROJETOS/meritial/web/src/components/Button/index.tsx"],"names":["React","Loading","Container","Button","buttonType","children","eventLoading","loading","rest"],"mappings":";;AAAA,OAAOA,KAAP,MAA4C,OAA5C;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,SAASC,SAAT,QAA0B,UAA1B;;AAQA,MAAMC,MAA6B,GAAG,CAAC;AACrCC,EAAAA,UADqC;AAErCC,EAAAA,QAFqC;AAGrCC,EAAAA,YAHqC;AAIrCC,EAAAA,OAJqC;AAKrC,KAAGC;AALkC,CAAD,kBAOpC,QAAC,SAAD;AACE,EAAA,UAAU,EAAEJ,UADd;AAEE,EAAA,IAAI,EAAC,QAFP;AAAA,KAGMI,IAHN;AAIE,EAAA,SAAS,EAAED,OAJb;AAKE,EAAA,QAAQ,EAAEA,OALZ;AAAA,YAOGA,OAAO,gBAAG,QAAC,OAAD;AAAS,IAAA,YAAY,EAAED;AAAvB;AAAA;AAAA;AAAA;AAAA,UAAH,GAA6CD;AAPvD;AAAA;AAAA;AAAA;AAAA,QAPF;;KAAMF,M;AAkBN,eAAeA,MAAf","sourcesContent":["import React, { ButtonHTMLAttributes } from 'react';\nimport Loading from './Loading';\nimport { Container } from './styles';\n\ntype ButtonProps = ButtonHTMLAttributes<HTMLButtonElement> & {\n  loading?: boolean;\n  buttonType: 'success' | 'error' | 'secondary' | 'primary';\n  eventLoading?: string;\n};\n\nconst Button: React.FC<ButtonProps> = ({\n  buttonType,\n  children,\n  eventLoading,\n  loading,\n  ...rest\n}) => (\n  <Container\n    buttonType={buttonType}\n    type=\"button\"\n    {...rest}\n    isLoading={loading}\n    disabled={loading}\n  >\n    {loading ? <Loading eventLoading={eventLoading} /> : children}\n  </Container>\n);\n\nexport default Button;\n"]},"metadata":{},"sourceType":"module"}