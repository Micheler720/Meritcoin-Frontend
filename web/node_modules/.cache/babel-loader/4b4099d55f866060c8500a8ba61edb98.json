{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/media/michele/Acer/Users/miche/Desktop/PROJETOS/meritial/web/src/components/Modal/index.tsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useTransition } from 'react-spring';\nimport { Container, Content, ModalContent } from './styles';\n\nconst Modal = ({\n  children,\n  isOpen,\n  setIsOpen\n}) => {\n  _s();\n\n  const transitions = useTransition(isOpen, null, {\n    from: {\n      opacity: 0,\n      transitionDuration: '2s'\n    },\n    enter: {\n      opacity: 1,\n      transitionDuration: '2s'\n    },\n    leave: {\n      opacity: 0,\n      transitionDuration: '2s'\n    }\n  });\n\n  if (isOpen) {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Container, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ModalContent, {\n        children: transitions.map(({\n          key,\n          props\n        }) => {\n          return /*#__PURE__*/_jsxDEV(Content, {\n            style: props,\n            children: children\n          }, key, false, {\n            fileName: _jsxFileName,\n            lineNumber: 24,\n            columnNumber: 15\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true);\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: \" \"\n  }, void 0, false);\n};\n\n_s(Modal, \"S9WbwGeXwu/q64eaNNQ+KH3GDfc=\", false, function () {\n  return [useTransition];\n});\n\n_c = Modal;\nexport default Modal;\n\nvar _c;\n\n$RefreshReg$(_c, \"Modal\");","map":{"version":3,"sources":["/media/michele/Acer/Users/miche/Desktop/PROJETOS/meritial/web/src/components/Modal/index.tsx"],"names":["React","useTransition","Container","Content","ModalContent","Modal","children","isOpen","setIsOpen","transitions","from","opacity","transitionDuration","enter","leave","map","key","props"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAgC,OAAhC;AACA,SAASC,aAAT,QAA8B,cAA9B;AACA,SAASC,SAAT,EAAoBC,OAApB,EAA6BC,YAA7B,QAAiD,UAAjD;;AAQA,MAAMC,KAA4B,GAAG,CAAC;AAAEC,EAAAA,QAAF;AAAYC,EAAAA,MAAZ;AAAoBC,EAAAA;AAApB,CAAD,KAAqC;AAAA;;AACxE,QAAMC,WAAW,GAAGR,aAAa,CAACM,MAAD,EAAS,IAAT,EAAe;AAC9CG,IAAAA,IAAI,EAAE;AAAEC,MAAAA,OAAO,EAAE,CAAX;AAAcC,MAAAA,kBAAkB,EAAE;AAAlC,KADwC;AAE9CC,IAAAA,KAAK,EAAE;AAAEF,MAAAA,OAAO,EAAE,CAAX;AAAcC,MAAAA,kBAAkB,EAAE;AAAlC,KAFuC;AAG9CE,IAAAA,KAAK,EAAE;AAAEH,MAAAA,OAAO,EAAE,CAAX;AAAcC,MAAAA,kBAAkB,EAAE;AAAlC;AAHuC,GAAf,CAAjC;;AAKA,MAAIL,MAAJ,EAAY;AACV,wBACE;AAAA,8BACE,QAAC,SAAD;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,QAAC,YAAD;AAAA,kBACGE,WAAW,CAACM,GAAZ,CAAgB,CAAC;AAAEC,UAAAA,GAAF;AAAOC,UAAAA;AAAP,SAAD,KAAoB;AACnC,8BACE,QAAC,OAAD;AAAmB,YAAA,KAAK,EAAEA,KAA1B;AAAA,sBACGX;AADH,aAAcU,GAAd;AAAA;AAAA;AAAA;AAAA,kBADF;AAKD,SANA;AADH;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA,oBADF;AAcD;;AACD,sBAAO;AAAA;AAAA,mBAAP;AACD,CAvBD;;GAAMX,K;UACgBJ,a;;;KADhBI,K;AAyBN,eAAeA,KAAf","sourcesContent":["import React, { useState } from 'react';\nimport { useTransition } from 'react-spring';\nimport { Container, Content, ModalContent } from './styles';\n\ninterface IModalProps {\n  isOpen: boolean;\n  setIsOpen: () => void;\n  children: any;\n}\n\nconst Modal: React.FC<IModalProps> = ({ children, isOpen, setIsOpen }) => {\n  const transitions = useTransition(isOpen, null, {\n    from: { opacity: 0, transitionDuration: '2s' },\n    enter: { opacity: 1, transitionDuration: '2s' },\n    leave: { opacity: 0, transitionDuration: '2s' },\n  });\n  if (isOpen) {\n    return (\n      <>\n        <Container />\n        <ModalContent>\n          {transitions.map(({ key, props }) => {\n            return (\n              <Content key={key} style={props}>\n                {children}\n              </Content>\n            );\n          })}\n        </ModalContent>\n      </>\n    );\n  }\n  return <> </>;\n};\n\nexport default Modal;\n"]},"metadata":{},"sourceType":"module"}