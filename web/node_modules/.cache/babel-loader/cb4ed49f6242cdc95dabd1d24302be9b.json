{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/media/michele/Acer/Users/miche/Desktop/PROJETOS/meritial/web/src/pages/ForgotPassword/index.tsx\",\n    _s = $RefreshSig$();\n\nimport { Form } from '@unform/web';\nimport React, { useCallback, useRef, useState } from 'react';\nimport * as Yup from 'yup';\nimport { FiMail } from 'react-icons/fi';\nimport Button from '../../components/Button';\nimport Input from '../../components/Input';\nimport { Container, Background, Content } from './styles';\nimport getValidationErrors from '../../util/getValidationErrors';\nimport { useToast } from '../../hooks/toast';\nimport api from '../../services/api';\n\nconst ForgotPassword = () => {\n  _s();\n\n  const formRef = useRef(null);\n  const {\n    addToast\n  } = useToast();\n  const [isLoading, setIsLoading] = useState(false);\n  const handleSubmit = useCallback(async data => {\n    var _formRef$current;\n\n    (_formRef$current = formRef.current) === null || _formRef$current === void 0 ? void 0 : _formRef$current.setErrors({});\n    setIsLoading(true);\n\n    try {\n      const schema = Yup.object().shape({\n        email: Yup.string().email('Informe um e-mail v치lido.').required('Obrigat칩rio preencher o e-mail')\n      });\n      await schema.validate(data, {\n        abortEarly: false\n      });\n      const {\n        email\n      } = data;\n      await api.post('/password/forgot', {\n        email\n      });\n      addToast({\n        type: 'success',\n        title: 'E-mail enviado!',\n        description: 'Verifique seu e-mail para resetar sua senha'\n      });\n    } catch (err) {\n      if (err instanceof Yup.ValidationError) {\n        var _formRef$current2;\n\n        const errors = getValidationErrors(err);\n        (_formRef$current2 = formRef.current) === null || _formRef$current2 === void 0 ? void 0 : _formRef$current2.setErrors(errors);\n        return;\n      }\n\n      addToast({\n        type: 'error',\n        title: 'Houve um erro ao enviar email, verifique o email.'\n      });\n    } finally {\n      setIsLoading(false);\n    }\n  }, [addToast]);\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [/*#__PURE__*/_jsxDEV(Content, {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Digite seu e-mail\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form, {\n        ref: formRef,\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(Input, {\n          icon: FiMail,\n          name: \"email\",\n          placeholder: \"E-mail\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          buttonType: \"success\",\n          loading: isLoading,\n          eventLoading: \"Enviando...\",\n          children: \"Enviar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Background, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ForgotPassword, \"bRmtZ19XhFGT+nUMlUUM2j6uVpo=\", false, function () {\n  return [useToast];\n});\n\n_c = ForgotPassword;\nexport default ForgotPassword;\n\nvar _c;\n\n$RefreshReg$(_c, \"ForgotPassword\");","map":{"version":3,"sources":["/media/michele/Acer/Users/miche/Desktop/PROJETOS/meritial/web/src/pages/ForgotPassword/index.tsx"],"names":["Form","React","useCallback","useRef","useState","Yup","FiMail","Button","Input","Container","Background","Content","getValidationErrors","useToast","api","ForgotPassword","formRef","addToast","isLoading","setIsLoading","handleSubmit","data","current","setErrors","schema","object","shape","email","string","required","validate","abortEarly","post","type","title","description","err","ValidationError","errors"],"mappings":"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","sourcesContent":["import { FormHandles } from '@unform/core';\nimport { Form } from '@unform/web';\nimport React, { useCallback, useRef, useState } from 'react';\nimport * as Yup from 'yup';\nimport { FiMail } from 'react-icons/fi';\nimport Button from '../../components/Button';\nimport Input from '../../components/Input';\nimport { Container, Background, Content } from './styles';\nimport getValidationErrors from '../../util/getValidationErrors';\nimport { useToast } from '../../hooks/toast';\nimport api from '../../services/api';\n\ninterface ForgotPasswordFormData {\n  email: string;\n}\n\nconst ForgotPassword: React.FC = () => {\n  const formRef = useRef<FormHandles>(null);\n  const { addToast } = useToast();\n  const [isLoading, setIsLoading] = useState(false);\n  const handleSubmit = useCallback(\n    async (data: ForgotPasswordFormData) => {\n      formRef.current?.setErrors({});\n      setIsLoading(true);\n      try {\n        const schema = Yup.object().shape({\n          email: Yup.string()\n            .email('Informe um e-mail v치lido.')\n            .required('Obrigat칩rio preencher o e-mail'),\n        });\n        await schema.validate(data, {\n          abortEarly: false,\n        });\n        const { email } = data;\n        await api.post('/password/forgot', {\n          email,\n        });\n        addToast({\n          type: 'success',\n          title: 'E-mail enviado!',\n          description: 'Verifique seu e-mail para resetar sua senha',\n        });\n      } catch (err) {\n        if (err instanceof Yup.ValidationError) {\n          const errors = getValidationErrors(err);\n          formRef.current?.setErrors(errors);\n          return;\n        }\n        addToast({\n          type: 'error',\n          title: 'Houve um erro ao enviar email, verifique o email.',\n        });\n      } finally {\n        setIsLoading(false);\n      }\n    },\n    [addToast],\n  );\n  return (\n    <Container>\n      <Content>\n        <h1>Digite seu e-mail</h1>\n        <Form ref={formRef} onSubmit={handleSubmit}>\n          <Input icon={FiMail} name=\"email\" placeholder=\"E-mail\" />\n          <Button\n            type=\"submit\"\n            buttonType=\"success\"\n            loading={isLoading}\n            eventLoading=\"Enviando...\"\n          >\n            Enviar\n          </Button>\n        </Form>\n      </Content>\n      <Background />\n    </Container>\n  );\n};\n\nexport default ForgotPassword;\n"]},"metadata":{},"sourceType":"module"}