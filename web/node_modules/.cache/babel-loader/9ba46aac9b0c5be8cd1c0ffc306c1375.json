{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/media/michele/Acer/Users/miche/Desktop/PROJETOS/meritial/web/src/components/TextArea/index.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useCallback, useEffect, useRef, useState } from 'react';\nimport { FiAlertCircle } from 'react-icons/fi';\nimport { useField } from 'unform';\nimport { Container, Error } from './styles';\n\nconst TextArea = ({\n  name,\n  placeholder,\n  icon: Icon,\n  children,\n  classNameContainer,\n  ...props\n}) => {\n  _s();\n\n  const textAreaRef = useRef(null);\n  const {\n    registerField,\n    error,\n    defaultValue,\n    fieldName\n  } = useField(name);\n  useEffect(() => {\n    registerField({\n      name: fieldName,\n      ref: textAreaRef.current,\n      path: 'value'\n    });\n  }, [fieldName, registerField]);\n  const [isFilled, setIsFilled] = useState(false);\n  const handleBlurTextArea = useCallback(() => {\n    var _textAreaRef$current;\n\n    setIsFilled(!!((_textAreaRef$current = textAreaRef.current) === null || _textAreaRef$current === void 0 ? void 0 : _textAreaRef$current.value));\n  }, []);\n  return /*#__PURE__*/_jsxDEV(Container, {\n    isError: !!error,\n    isFilled: isFilled,\n    className: classNameContainer,\n    children: [Icon && /*#__PURE__*/_jsxDEV(Icon, {\n      size: 20\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 16\n    }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n      ref: textAreaRef,\n      defaultValue: defaultValue,\n      name: name,\n      placeholder: placeholder,\n      onBlur: handleBlurTextArea,\n      ...props,\n      children: children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(Error, {\n      title: error,\n      children: /*#__PURE__*/_jsxDEV(FiAlertCircle, {\n        color: \"#c53030\",\n        size: 20\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n};\n\n_s(TextArea, \"1l36iKtghAwbrREk+jgs+bCXSBc=\", false, function () {\n  return [useField];\n});\n\n_c = TextArea;\nexport default TextArea;\n\nvar _c;\n\n$RefreshReg$(_c, \"TextArea\");","map":{"version":3,"sources":["/media/michele/Acer/Users/miche/Desktop/PROJETOS/meritial/web/src/components/TextArea/index.tsx"],"names":["React","useCallback","useEffect","useRef","useState","FiAlertCircle","useField","Container","Error","TextArea","name","placeholder","icon","Icon","children","classNameContainer","props","textAreaRef","registerField","error","defaultValue","fieldName","ref","current","path","isFilled","setIsFilled","handleBlurTextArea","value"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAEEC,WAFF,EAGEC,SAHF,EAIEC,MAJF,EAKEC,QALF,QAMO,OANP;AAOA,SAASC,aAAT,QAA8B,gBAA9B;AAEA,SAASC,QAAT,QAAyB,QAAzB;AACA,SAASC,SAAT,EAAoBC,KAApB,QAAiC,UAAjC;;AASA,MAAMC,QAAiC,GAAG,CAAC;AACzCC,EAAAA,IADyC;AAEzCC,EAAAA,WAFyC;AAGzCC,EAAAA,IAAI,EAAEC,IAHmC;AAIzCC,EAAAA,QAJyC;AAKzCC,EAAAA,kBALyC;AAMzC,KAAGC;AANsC,CAAD,KAOpC;AAAA;;AACJ,QAAMC,WAAW,GAAGd,MAAM,CAAsB,IAAtB,CAA1B;AAEA,QAAM;AAAEe,IAAAA,aAAF;AAAiBC,IAAAA,KAAjB;AAAwBC,IAAAA,YAAxB;AAAsCC,IAAAA;AAAtC,MAAoDf,QAAQ,CAACI,IAAD,CAAlE;AAEAR,EAAAA,SAAS,CAAC,MAAM;AACdgB,IAAAA,aAAa,CAAC;AACZR,MAAAA,IAAI,EAAEW,SADM;AAEZC,MAAAA,GAAG,EAAEL,WAAW,CAACM,OAFL;AAGZC,MAAAA,IAAI,EAAE;AAHM,KAAD,CAAb;AAKD,GANQ,EAMN,CAACH,SAAD,EAAYH,aAAZ,CANM,CAAT;AAQA,QAAM,CAACO,QAAD,EAAWC,WAAX,IAA0BtB,QAAQ,CAAC,KAAD,CAAxC;AACA,QAAMuB,kBAAkB,GAAG1B,WAAW,CAAC,MAAM;AAAA;;AAC3CyB,IAAAA,WAAW,CAAC,CAAC,0BAACT,WAAW,CAACM,OAAb,yDAAC,qBAAqBK,KAAtB,CAAF,CAAX;AACD,GAFqC,EAEnC,EAFmC,CAAtC;AAIA,sBACE,QAAC,SAAD;AACE,IAAA,OAAO,EAAE,CAAC,CAACT,KADb;AAEE,IAAA,QAAQ,EAAEM,QAFZ;AAGE,IAAA,SAAS,EAAEV,kBAHb;AAAA,eAKGF,IAAI,iBAAI,QAAC,IAAD;AAAM,MAAA,IAAI,EAAE;AAAZ;AAAA;AAAA;AAAA;AAAA,YALX,eAME;AACE,MAAA,GAAG,EAAEI,WADP;AAEE,MAAA,YAAY,EAAEG,YAFhB;AAGE,MAAA,IAAI,EAAEV,IAHR;AAIE,MAAA,WAAW,EAAEC,WAJf;AAKE,MAAA,MAAM,EAAEgB,kBALV;AAAA,SAMMX,KANN;AAAA,gBAQGF;AARH;AAAA;AAAA;AAAA;AAAA,YANF,EAgBGK,KAAK,iBACJ,QAAC,KAAD;AAAO,MAAA,KAAK,EAAEA,KAAd;AAAA,6BACE,QAAC,aAAD;AAAe,QAAA,KAAK,EAAC,SAArB;AAA+B,QAAA,IAAI,EAAE;AAArC;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAjBJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAwBD,CAjDD;;GAAMV,Q;UAUsDH,Q;;;KAVtDG,Q;AAmDN,eAAeA,QAAf","sourcesContent":["import React, {\n  TextareaHTMLAttributes,\n  useCallback,\n  useEffect,\n  useRef,\n  useState,\n} from 'react';\nimport { FiAlertCircle } from 'react-icons/fi';\nimport { IconBaseProps } from 'react-icons/lib';\nimport { useField } from 'unform';\nimport { Container, Error } from './styles';\n\ninterface TextAreaProps extends TextareaHTMLAttributes<HTMLTextAreaElement> {\n  name: string;\n  placeholder: string;\n  icon?: React.ComponentType<IconBaseProps>;\n  classNameContainer?: string;\n}\n\nconst TextArea: React.FC<TextAreaProps> = ({\n  name,\n  placeholder,\n  icon: Icon,\n  children,\n  classNameContainer,\n  ...props\n}) => {\n  const textAreaRef = useRef<HTMLTextAreaElement>(null);\n\n  const { registerField, error, defaultValue, fieldName } = useField(name);\n\n  useEffect(() => {\n    registerField({\n      name: fieldName,\n      ref: textAreaRef.current,\n      path: 'value',\n    });\n  }, [fieldName, registerField]);\n\n  const [isFilled, setIsFilled] = useState(false);\n  const handleBlurTextArea = useCallback(() => {\n    setIsFilled(!!textAreaRef.current?.value);\n  }, []);\n\n  return (\n    <Container\n      isError={!!error}\n      isFilled={isFilled}\n      className={classNameContainer}\n    >\n      {Icon && <Icon size={20} />}\n      <textarea\n        ref={textAreaRef}\n        defaultValue={defaultValue}\n        name={name}\n        placeholder={placeholder}\n        onBlur={handleBlurTextArea}\n        {...props}\n      >\n        {children}\n      </textarea>\n      {error && (\n        <Error title={error}>\n          <FiAlertCircle color=\"#c53030\" size={20} />\n        </Error>\n      )}\n    </Container>\n  );\n};\n\nexport default TextArea;\n"]},"metadata":{},"sourceType":"module"}