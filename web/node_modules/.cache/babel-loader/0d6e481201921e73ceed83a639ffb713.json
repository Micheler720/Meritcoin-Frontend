{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/media/michele/Acer/Users/miche/Desktop/PROJETOS/meritial/web/src/pages/Register/GroupUser/ModalUpdateUser/index.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useCallback, useMemo, useRef } from 'react';\nimport { Form } from '@unform/web';\nimport * as Yup from 'yup';\nimport { BiGroup } from 'react-icons/bi';\nimport Button from '../../../../components/Button';\nimport Input from '../../../../components/Input';\nimport Modal from '../../../../components/Modal';\nimport { Content } from './styles';\nimport getValidationErrors from '../../../../util/getValidationErrors';\nimport { useToast } from '../../../../hooks/toast';\nexport const ModalEditUser = ({\n  setIsOpen,\n  isOpen,\n  children,\n  handleUpdateUser\n}) => {\n  _s();\n\n  const formRef = useRef(null);\n  const {\n    addToast\n  } = useToast();\n  const groupUsers = useMemo(() => {\n    return [{\n      value: '1',\n      description: 'Belo Horizonte'\n    }, {\n      value: '2',\n      description: 'Distrito Federal'\n    }, {\n      value: '3',\n      description: 'Brasilia'\n    }];\n  }, []);\n  const profilesUser = useMemo(() => {\n    return [{\n      value: '1',\n      description: 'Administrador'\n    }, {\n      value: '2',\n      description: 'Usuário'\n    }];\n  }, []);\n  const handleSubmit = useCallback(async data => {\n    var _formRef$current;\n\n    (_formRef$current = formRef.current) === null || _formRef$current === void 0 ? void 0 : _formRef$current.setErrors({});\n\n    try {\n      const schema = Yup.object().shape({\n        name: Yup.string().required('Obrigatório informar um nome para o usuário'),\n        email: Yup.string().email('Digite um e-mail válido'),\n        group_user: Yup.string().required('Selecione um grupo para o usuário'),\n        profile_access: Yup.string().required('Informe um perfil de acesso para o usuário')\n      });\n      await schema.validate(data);\n      await handleUpdateUser(data);\n      addToast({\n        type: 'success',\n        title: 'Usuário atualizado com sucesso'\n      });\n    } catch (err) {\n      if (err instanceof Yup.ValidationError) {\n        var _formRef$current2;\n\n        const errors = getValidationErrors(err);\n        (_formRef$current2 = formRef.current) === null || _formRef$current2 === void 0 ? void 0 : _formRef$current2.setErrors(errors);\n        return;\n      }\n\n      addToast({\n        type: 'error',\n        title: 'Houve um erro na atualização do usuário'\n      });\n    }\n  }, [handleUpdateUser, addToast]);\n  return /*#__PURE__*/_jsxDEV(Modal, {\n    setIsOpen: setIsOpen,\n    isOpen: isOpen,\n    children: [children, /*#__PURE__*/_jsxDEV(Content, {\n      children: /*#__PURE__*/_jsxDEV(Form, {\n        ref: formRef,\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(Input, {\n          placeholder: \"Nome\",\n          name: \"name\",\n          icon: BiGroup\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Input, {\n          placeholder: \"Inativo\",\n          type: \"checkbox\",\n          name: \"inactive_user\",\n          id: \"inactive_user\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          buttonType: \"success\",\n          children: \"Salvar Altera\\xE7\\xF5es\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 114,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ModalEditUser, \"k58gY0fUOdYuaX7coA4wS+de9AQ=\", false, function () {\n  return [useToast];\n});\n\n_c = ModalEditUser;\n\nvar _c;\n\n$RefreshReg$(_c, \"ModalEditUser\");","map":{"version":3,"sources":["/media/michele/Acer/Users/miche/Desktop/PROJETOS/meritial/web/src/pages/Register/GroupUser/ModalUpdateUser/index.tsx"],"names":["React","useCallback","useMemo","useRef","Form","Yup","BiGroup","Button","Input","Modal","Content","getValidationErrors","useToast","ModalEditUser","setIsOpen","isOpen","children","handleUpdateUser","formRef","addToast","groupUsers","value","description","profilesUser","handleSubmit","data","current","setErrors","schema","object","shape","name","string","required","email","group_user","profile_access","validate","type","title","err","ValidationError","errors"],"mappings":";;;;;AACA,OAAOA,KAAP,IAAgBC,WAAhB,EAA6BC,OAA7B,EAAsCC,MAAtC,QAAoD,OAApD;AAIA,SAASC,IAAT,QAAqB,aAArB;AACA,OAAO,KAAKC,GAAZ,MAAqB,KAArB;AAEA,SAASC,OAAT,QAAwB,gBAAxB;AACA,OAAOC,MAAP,MAAmB,+BAAnB;AACA,OAAOC,KAAP,MAAkB,8BAAlB;AACA,OAAOC,KAAP,MAAkB,8BAAlB;AAEA,SAAwBC,OAAxB,QAAuC,UAAvC;AACA,OAAOC,mBAAP,MAAgC,sCAAhC;AACA,SAASC,QAAT,QAAyB,yBAAzB;AAkBA,OAAO,MAAMC,aAAoC,GAAG,CAAC;AACnDC,EAAAA,SADmD;AAEnDC,EAAAA,MAFmD;AAGnDC,EAAAA,QAHmD;AAInDC,EAAAA;AAJmD,CAAD,KAK9C;AAAA;;AACJ,QAAMC,OAAO,GAAGf,MAAM,CAAc,IAAd,CAAtB;AAEA,QAAM;AAAEgB,IAAAA;AAAF,MAAeP,QAAQ,EAA7B;AAEA,QAAMQ,UAAU,GAAGlB,OAAO,CAAC,MAAM;AAC/B,WAAO,CACL;AACEmB,MAAAA,KAAK,EAAE,GADT;AAEEC,MAAAA,WAAW,EAAE;AAFf,KADK,EAKL;AACED,MAAAA,KAAK,EAAE,GADT;AAEEC,MAAAA,WAAW,EAAE;AAFf,KALK,EASL;AACED,MAAAA,KAAK,EAAE,GADT;AAEEC,MAAAA,WAAW,EAAE;AAFf,KATK,CAAP;AAcD,GAfyB,EAevB,EAfuB,CAA1B;AAiBA,QAAMC,YAAY,GAAGrB,OAAO,CAAC,MAAM;AACjC,WAAO,CACL;AACEmB,MAAAA,KAAK,EAAE,GADT;AAEEC,MAAAA,WAAW,EAAE;AAFf,KADK,EAKL;AACED,MAAAA,KAAK,EAAE,GADT;AAEEC,MAAAA,WAAW,EAAE;AAFf,KALK,CAAP;AAUD,GAX2B,EAWzB,EAXyB,CAA5B;AAaA,QAAME,YAAY,GAAGvB,WAAW,CAC9B,MAAOwB,IAAP,IAA2B;AAAA;;AACzB,wBAAAP,OAAO,CAACQ,OAAR,sEAAiBC,SAAjB,CAA2B,EAA3B;;AACA,QAAI;AACF,YAAMC,MAAM,GAAGvB,GAAG,CAACwB,MAAJ,GAAaC,KAAb,CAAmB;AAChCC,QAAAA,IAAI,EAAE1B,GAAG,CAAC2B,MAAJ,GAAaC,QAAb,CACJ,6CADI,CAD0B;AAIhCC,QAAAA,KAAK,EAAE7B,GAAG,CAAC2B,MAAJ,GAAaE,KAAb,CAAmB,yBAAnB,CAJyB;AAKhCC,QAAAA,UAAU,EAAE9B,GAAG,CAAC2B,MAAJ,GAAaC,QAAb,CACV,mCADU,CALoB;AAQhCG,QAAAA,cAAc,EAAE/B,GAAG,CAAC2B,MAAJ,GAAaC,QAAb,CACd,4CADc;AARgB,OAAnB,CAAf;AAYA,YAAML,MAAM,CAACS,QAAP,CAAgBZ,IAAhB,CAAN;AAEA,YAAMR,gBAAgB,CAACQ,IAAD,CAAtB;AAEAN,MAAAA,QAAQ,CAAC;AACPmB,QAAAA,IAAI,EAAE,SADC;AAEPC,QAAAA,KAAK,EAAE;AAFA,OAAD,CAAR;AAID,KArBD,CAqBE,OAAOC,GAAP,EAAY;AACZ,UAAIA,GAAG,YAAYnC,GAAG,CAACoC,eAAvB,EAAwC;AAAA;;AACtC,cAAMC,MAAM,GAAG/B,mBAAmB,CAAC6B,GAAD,CAAlC;AACA,6BAAAtB,OAAO,CAACQ,OAAR,wEAAiBC,SAAjB,CAA2Be,MAA3B;AACA;AACD;;AACDvB,MAAAA,QAAQ,CAAC;AACPmB,QAAAA,IAAI,EAAE,OADC;AAEPC,QAAAA,KAAK,EAAE;AAFA,OAAD,CAAR;AAID;AACF,GAnC6B,EAoC9B,CAACtB,gBAAD,EAAmBE,QAAnB,CApC8B,CAAhC;AAuCA,sBACE,QAAC,KAAD;AAAO,IAAA,SAAS,EAAEL,SAAlB;AAA6B,IAAA,MAAM,EAAEC,MAArC;AAAA,eACGC,QADH,eAEE,QAAC,OAAD;AAAA,6BACE,QAAC,IAAD;AAAM,QAAA,GAAG,EAAEE,OAAX;AAAoB,QAAA,QAAQ,EAAEM,YAA9B;AAAA,gCACE,QAAC,KAAD;AAAO,UAAA,WAAW,EAAC,MAAnB;AAA0B,UAAA,IAAI,EAAC,MAA/B;AAAsC,UAAA,IAAI,EAAElB;AAA5C;AAAA;AAAA;AAAA;AAAA,gBADF,eAGE,QAAC,KAAD;AACE,UAAA,WAAW,EAAC,SADd;AAEE,UAAA,IAAI,EAAC,UAFP;AAGE,UAAA,IAAI,EAAC,eAHP;AAIE,UAAA,EAAE,EAAC;AAJL;AAAA;AAAA;AAAA;AAAA,gBAHF,eAUE,QAAC,MAAD;AAAQ,UAAA,IAAI,EAAC,QAAb;AAAsB,UAAA,UAAU,EAAC,SAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAVF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAqBD,CApGM;;GAAMO,a;UAQUD,Q;;;KARVC,a","sourcesContent":["import { FormHandles } from '@unform/core';\nimport React, { useCallback, useMemo, useRef } from 'react';\nimport { AiOutlineUsergroupAdd } from 'react-icons/ai';\nimport { FiCamera, FiMail, FiUser } from 'react-icons/fi';\nimport { ImProfile } from 'react-icons/im';\nimport { Form } from '@unform/web';\nimport * as Yup from 'yup';\nimport { FaBirthdayCake } from 'react-icons/fa';\nimport { BiGroup } from 'react-icons/bi';\nimport Button from '../../../../components/Button';\nimport Input from '../../../../components/Input';\nimport Modal from '../../../../components/Modal';\nimport Select from '../../../../components/Select';\nimport { ProfileAvatar, Content } from './styles';\nimport getValidationErrors from '../../../../util/getValidationErrors';\nimport { useToast } from '../../../../hooks/toast';\nimport FormGroup from '../../../../components/FormGroup';\n\ninterface IModalProps {\n  isOpen: boolean;\n  setIsOpen: () => void;\n  handleUpdateUser: (data: IFormData) => void;\n}\n\ninterface IFormData {\n  name: string;\n  email: string;\n  group_user: string;\n  profile_access: string;\n  inactive_user: boolean;\n  profile_sector: string;\n}\n\nexport const ModalEditUser: React.FC<IModalProps> = ({\n  setIsOpen,\n  isOpen,\n  children,\n  handleUpdateUser,\n}) => {\n  const formRef = useRef<FormHandles>(null);\n\n  const { addToast } = useToast();\n\n  const groupUsers = useMemo(() => {\n    return [\n      {\n        value: '1',\n        description: 'Belo Horizonte',\n      },\n      {\n        value: '2',\n        description: 'Distrito Federal',\n      },\n      {\n        value: '3',\n        description: 'Brasilia',\n      },\n    ];\n  }, []);\n\n  const profilesUser = useMemo(() => {\n    return [\n      {\n        value: '1',\n        description: 'Administrador',\n      },\n      {\n        value: '2',\n        description: 'Usuário',\n      },\n    ];\n  }, []);\n\n  const handleSubmit = useCallback(\n    async (data: IFormData) => {\n      formRef.current?.setErrors({});\n      try {\n        const schema = Yup.object().shape({\n          name: Yup.string().required(\n            'Obrigatório informar um nome para o usuário',\n          ),\n          email: Yup.string().email('Digite um e-mail válido'),\n          group_user: Yup.string().required(\n            'Selecione um grupo para o usuário',\n          ),\n          profile_access: Yup.string().required(\n            'Informe um perfil de acesso para o usuário',\n          ),\n        });\n        await schema.validate(data);\n\n        await handleUpdateUser(data);\n\n        addToast({\n          type: 'success',\n          title: 'Usuário atualizado com sucesso',\n        });\n      } catch (err) {\n        if (err instanceof Yup.ValidationError) {\n          const errors = getValidationErrors(err);\n          formRef.current?.setErrors(errors);\n          return;\n        }\n        addToast({\n          type: 'error',\n          title: 'Houve um erro na atualização do usuário',\n        });\n      }\n    },\n    [handleUpdateUser, addToast],\n  );\n\n  return (\n    <Modal setIsOpen={setIsOpen} isOpen={isOpen}>\n      {children}\n      <Content>\n        <Form ref={formRef} onSubmit={handleSubmit}>\n          <Input placeholder=\"Nome\" name=\"name\" icon={BiGroup} />\n\n          <Input\n            placeholder=\"Inativo\"\n            type=\"checkbox\"\n            name=\"inactive_user\"\n            id=\"inactive_user\"\n          />\n\n          <Button type=\"submit\" buttonType=\"success\">\n            Salvar Alterações\n          </Button>\n        </Form>\n      </Content>\n    </Modal>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}