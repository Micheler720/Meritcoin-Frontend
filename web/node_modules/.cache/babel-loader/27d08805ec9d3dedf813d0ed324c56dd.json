{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/media/michele/Acer/Users/miche/Desktop/PROJETOS/meritial/web/src/components/Modal/index.tsx\";\nimport React from 'react';\nimport { Container, Content } from './styles';\n\nconst Modal = ({\n  children,\n  isOpen,\n  setIsOpen\n}) => {\n  if (isOpen) {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Container, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ModalContent, {\n        children: /*#__PURE__*/_jsxDEV(Content, {\n          children: children\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 16,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true);\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: \" \"\n  }, void 0, false);\n};\n\n_c = Modal;\nexport default Modal;\n\nvar _c;\n\n$RefreshReg$(_c, \"Modal\");","map":{"version":3,"sources":["/media/michele/Acer/Users/miche/Desktop/PROJETOS/meritial/web/src/components/Modal/index.tsx"],"names":["React","Container","Content","Modal","children","isOpen","setIsOpen"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,SAAT,EAAoBC,OAApB,QAAmC,UAAnC;;AAQA,MAAMC,KAA4B,GAAG,CAAC;AAAEC,EAAAA,QAAF;AAAYC,EAAAA,MAAZ;AAAoBC,EAAAA;AAApB,CAAD,KAAqC;AACxE,MAAID,MAAJ,EAAY;AACV,wBACE;AAAA,8BACE,QAAC,SAAD;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,QAAC,YAAD;AAAA,+BACE,QAAC,OAAD;AAAA,oBAAUD;AAAV;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA,oBADF;AAQD;;AACD,sBAAO;AAAA;AAAA,mBAAP;AACD,CAZD;;KAAMD,K;AAcN,eAAeA,KAAf","sourcesContent":["import React from 'react';\nimport { Container, Content } from './styles';\n\ninterface IModalProps {\n  isOpen: boolean;\n  setIsOpen: () => void;\n  children: any;\n}\n\nconst Modal: React.FC<IModalProps> = ({ children, isOpen, setIsOpen }) => {\n  if (isOpen) {\n    return (\n      <>\n        <Container />\n        <ModalContent>\n          <Content>{children}</Content>\n        </ModalContent>\n      </>\n    );\n  }\n  return <> </>;\n};\n\nexport default Modal;\n"]},"metadata":{},"sourceType":"module"}