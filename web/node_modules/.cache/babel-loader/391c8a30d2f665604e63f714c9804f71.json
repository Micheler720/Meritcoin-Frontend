{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/media/michele/Acer/Users/miche/Desktop/PROJETOS/meritial/src/hooks/auth.tsx\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React, { useCallback, createContext, useState, useContext } from 'react';\nimport api from '../services/api';\nconst AuthContext = /*#__PURE__*/createContext({});\nexport const AuthProvider = ({\n  children\n}) => {\n  _s();\n\n  const [data, setData] = useState(() => {\n    const user = localStorage.getItem('@Meritial:user');\n    const token = localStorage.getItem('@Meritial:token');\n\n    if (user && token) {\n      return {\n        token,\n        user: JSON.parse(user)\n      };\n    }\n\n    return {};\n  });\n  const signIn = useCallback(async ({\n    email,\n    password\n  }) => {\n    const response = await api.post('/sessions', {\n      email,\n      password\n    });\n    const {\n      token,\n      user\n    } = response.data;\n    localStorage.setItem('@Meritial:user', JSON.stringify(user));\n    localStorage.setItem('@Meritial:token', token);\n    setData({\n      token,\n      user\n    });\n  }, []);\n  const signOut = useCallback(() => {\n    localStorage.removeItem('@Meritial:user');\n    localStorage.removeItem('@Meritial:token');\n    setData({});\n  }, []);\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      user: data.user,\n      signIn,\n      signOut\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 5\n  }, this);\n};\n\n_s(AuthProvider, \"JhQXqSJVx02vd4FQNFCiN+AurD0=\");\n\n_c = AuthProvider;\nexport function useAuth() {\n  _s2();\n\n  const context = useContext(AuthContext);\n\n  if (!context) {\n    throw new Error('useAuth must be used within an AuthProvider.');\n  }\n\n  return context;\n}\n\n_s2(useAuth, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\n\nvar _c;\n\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"sources":["/media/michele/Acer/Users/miche/Desktop/PROJETOS/meritial/src/hooks/auth.tsx"],"names":["React","useCallback","createContext","useState","useContext","api","AuthContext","AuthProvider","children","data","setData","user","localStorage","getItem","token","JSON","parse","signIn","email","password","response","post","setItem","stringify","signOut","removeItem","useAuth","context","Error"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,WAAhB,EAA6BC,aAA7B,EAA4CC,QAA5C,EAAsDC,UAAtD,QAAwE,OAAxE;AAEA,OAAOC,GAAP,MAAgB,iBAAhB;AAuBA,MAAMC,WAAW,gBAAGJ,aAAa,CAAmB,EAAnB,CAAjC;AAEA,OAAO,MAAMK,YAAsB,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAkB;AAAA;;AACtD,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBP,QAAQ,CAAa,MAAM;AACjD,UAAMQ,IAAI,GAAGC,YAAY,CAACC,OAAb,CAAqB,gBAArB,CAAb;AACA,UAAMC,KAAK,GAAGF,YAAY,CAACC,OAAb,CAAqB,iBAArB,CAAd;;AACA,QAAIF,IAAI,IAAIG,KAAZ,EAAmB;AACjB,aAAO;AAAEA,QAAAA,KAAF;AAASH,QAAAA,IAAI,EAAEI,IAAI,CAACC,KAAL,CAAWL,IAAX;AAAf,OAAP;AACD;;AACD,WAAO,EAAP;AACD,GAP+B,CAAhC;AASA,QAAMM,MAAM,GAAGhB,WAAW,CAAC,OAAO;AAAEiB,IAAAA,KAAF;AAASC,IAAAA;AAAT,GAAP,KAA+B;AACxD,UAAMC,QAAQ,GAAG,MAAMf,GAAG,CAACgB,IAAJ,CAAS,WAAT,EAAsB;AAC3CH,MAAAA,KAD2C;AAE3CC,MAAAA;AAF2C,KAAtB,CAAvB;AAIA,UAAM;AAAEL,MAAAA,KAAF;AAASH,MAAAA;AAAT,QAAkBS,QAAQ,CAACX,IAAjC;AACAG,IAAAA,YAAY,CAACU,OAAb,CAAqB,gBAArB,EAAuCP,IAAI,CAACQ,SAAL,CAAeZ,IAAf,CAAvC;AACAC,IAAAA,YAAY,CAACU,OAAb,CAAqB,iBAArB,EAAwCR,KAAxC;AACAJ,IAAAA,OAAO,CAAC;AACNI,MAAAA,KADM;AAENH,MAAAA;AAFM,KAAD,CAAP;AAID,GAZyB,EAYvB,EAZuB,CAA1B;AAcA,QAAMa,OAAO,GAAGvB,WAAW,CAAC,MAAM;AAChCW,IAAAA,YAAY,CAACa,UAAb,CAAwB,gBAAxB;AACAb,IAAAA,YAAY,CAACa,UAAb,CAAwB,iBAAxB;AACAf,IAAAA,OAAO,CAAC,EAAD,CAAP;AACD,GAJ0B,EAIxB,EAJwB,CAA3B;AAMA,sBACE,QAAC,WAAD,CAAa,QAAb;AAAsB,IAAA,KAAK,EAAE;AAAEC,MAAAA,IAAI,EAAEF,IAAI,CAACE,IAAb;AAAmBM,MAAAA,MAAnB;AAA2BO,MAAAA;AAA3B,KAA7B;AAAA,cACGhB;AADH;AAAA;AAAA;AAAA;AAAA,UADF;AAKD,CAnCM;;GAAMD,Y;;KAAAA,Y;AAoCb,OAAO,SAASmB,OAAT,GAAqC;AAAA;;AAC1C,QAAMC,OAAO,GAAGvB,UAAU,CAACE,WAAD,CAA1B;;AACA,MAAI,CAACqB,OAAL,EAAc;AACZ,UAAM,IAAIC,KAAJ,CAAU,8CAAV,CAAN;AACD;;AACD,SAAOD,OAAP;AACD;;IANeD,O","sourcesContent":["import React, { useCallback, createContext, useState, useContext } from 'react';\n\nimport api from '../services/api';\n\ninterface IAuthContextData {\n  user: IUser;\n  signIn(data: ISignInCredentials): Promise<void>;\n  signOut(): void;\n}\ninterface IUser {\n  id: string;\n  name: string;\n  avatar_url: string;\n}\n\ninterface ISignInCredentials {\n  email: string;\n  password: string;\n}\n\ninterface IAuthState {\n  token: string;\n  user: IUser;\n}\n\nconst AuthContext = createContext<IAuthContextData>({} as IAuthContextData);\n\nexport const AuthProvider: React.FC = ({ children }) => {\n  const [data, setData] = useState<IAuthState>(() => {\n    const user = localStorage.getItem('@Meritial:user');\n    const token = localStorage.getItem('@Meritial:token');\n    if (user && token) {\n      return { token, user: JSON.parse(user) };\n    }\n    return {} as IAuthState;\n  });\n\n  const signIn = useCallback(async ({ email, password }) => {\n    const response = await api.post('/sessions', {\n      email,\n      password,\n    });\n    const { token, user } = response.data;\n    localStorage.setItem('@Meritial:user', JSON.stringify(user));\n    localStorage.setItem('@Meritial:token', token);\n    setData({\n      token,\n      user,\n    });\n  }, []);\n\n  const signOut = useCallback(() => {\n    localStorage.removeItem('@Meritial:user');\n    localStorage.removeItem('@Meritial:token');\n    setData({} as IAuthState);\n  }, []);\n\n  return (\n    <AuthContext.Provider value={{ user: data.user, signIn, signOut }}>\n      {children}\n    </AuthContext.Provider>\n  );\n};\nexport function useAuth(): IAuthContextData {\n  const context = useContext(AuthContext);\n  if (!context) {\n    throw new Error('useAuth must be used within an AuthProvider.');\n  }\n  return context;\n}\n"]},"metadata":{},"sourceType":"module"}