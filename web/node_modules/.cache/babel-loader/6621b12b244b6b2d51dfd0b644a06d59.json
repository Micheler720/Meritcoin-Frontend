{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/media/michele/Acer/Users/miche/Desktop/PROJETOS/meritial/web/src/pages/DonateCoins/index.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useCallback, useRef } from 'react';\nimport { FaCoins, FaIdBadge } from 'react-icons/fa';\nimport { Form } from '@unform/web';\nimport * as Yup from 'yup';\nimport Container from '../../components/Container/index';\nimport { Content, Title } from './styles';\nimport Input from '../../components/Input';\nimport Select from '../../components/Select';\nimport getValidationErrors from '../../util/getValidationErrors';\nimport { useToast } from '../../hooks/toast';\nimport TextArea from '../../components/TextArea';\nimport Button from '../../components/Button';\n\nconst DonateCoins = () => {\n  _s();\n\n  const formRef = useRef(null);\n  const taxpayer = [{\n    description: 'Tiago Almeida',\n    value: 1\n  }, {\n    description: 'MIchele',\n    value: 2\n  }, {\n    description: 'Tiago Almeida',\n    value: 4\n  }, {\n    description: 'Tiago Almeida',\n    value: 3\n  }];\n  const {\n    addToast\n  } = useToast();\n  const handleSubmit = useCallback(async data => {\n    var _formRef$current;\n\n    (_formRef$current = formRef.current) === null || _formRef$current === void 0 ? void 0 : _formRef$current.setErrors({});\n\n    try {\n      const schema = Yup.object().shape({\n        taxpayer: Yup.string().required('Obrigatório Informar o contribuinte.'),\n        coins: Yup.number().required('Obritório informar um valor de moedas para prosseguir com a doação'),\n        comment: Yup.string().required('Obrigatório informar um comentário para prosseguir com a doação'),\n        hashtag: Yup.string().required('Obrigatório informar um hashtag para prosseguir com lançamento')\n      });\n      await schema.validate(data);\n      addToast({\n        title: 'Doação realizada com sucesso.',\n        type: 'success'\n      });\n    } catch (err) {\n      if (err instanceof Yup.ValidationError) {\n        var _formRef$current2;\n\n        const errors = getValidationErrors(err);\n        (_formRef$current2 = formRef.current) === null || _formRef$current2 === void 0 ? void 0 : _formRef$current2.setErrors(errors);\n        return;\n      }\n\n      addToast({\n        title: 'Houve um erro na doação de coins.',\n        type: 'error',\n        description: 'Verifique houve um erro ao tentar realizar a doação dos coins'\n      });\n    }\n  }, [addToast]);\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: /*#__PURE__*/_jsxDEV(Content, {\n      children: [/*#__PURE__*/_jsxDEV(Title, {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Ola, Fulano de Tal.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Voc\\xEA possui 500 coins para doar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form, {\n        ref: formRef,\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(Select, {\n          name: \"taxpayer\",\n          classNameContainer: \"taxpayer\",\n          data: taxpayer,\n          icon: FaIdBadge\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Input, {\n          type: \"number\",\n          name: \"coins\",\n          placeholder: \"Coins\",\n          icon: FaCoins,\n          classNameContainer: \"coins\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TextArea, {\n          name: \"comment\",\n          classNameContainer: \"comment\",\n          placeholder: \"Coment\\xE1rio\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TextArea, {\n          name: \"hashtag\",\n          classNameContainer: \"hashtag\",\n          placeholder: \"HashTag\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          buttonType: \"success\",\n          children: \"Doar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 88,\n    columnNumber: 5\n  }, this);\n};\n\n_s(DonateCoins, \"0efCcQ4iJVfMztjcprC8DZzPJkU=\", false, function () {\n  return [useToast];\n});\n\n_c = DonateCoins;\nexport default DonateCoins;\n\nvar _c;\n\n$RefreshReg$(_c, \"DonateCoins\");","map":{"version":3,"sources":["/media/michele/Acer/Users/miche/Desktop/PROJETOS/meritial/web/src/pages/DonateCoins/index.tsx"],"names":["React","useCallback","useRef","FaCoins","FaIdBadge","Form","Yup","Container","Content","Title","Input","Select","getValidationErrors","useToast","TextArea","Button","DonateCoins","formRef","taxpayer","description","value","addToast","handleSubmit","data","current","setErrors","schema","object","shape","string","required","coins","number","comment","hashtag","validate","title","type","err","ValidationError","errors"],"mappings":"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","sourcesContent":["import React, { useCallback, useRef } from 'react';\nimport { FaCoins, FaIdBadge } from 'react-icons/fa';\nimport { FormHandles } from '@unform/core';\nimport { Form } from '@unform/web';\nimport * as Yup from 'yup';\nimport Container from '../../components/Container/index';\nimport { Content, Title } from './styles';\nimport Input from '../../components/Input';\nimport Select from '../../components/Select';\nimport getValidationErrors from '../../util/getValidationErrors';\nimport { useToast } from '../../hooks/toast';\nimport TextArea from '../../components/TextArea';\nimport Button from '../../components/Button';\n\ninterface FormData {\n  taxpayer: string | number;\n  coins: number;\n  comment: string;\n  hashtag: string;\n}\n\nconst DonateCoins: React.FC = () => {\n  const formRef = useRef<FormHandles>(null);\n\n  const taxpayer = [\n    {\n      description: 'Tiago Almeida',\n      value: 1,\n    },\n    {\n      description: 'MIchele',\n      value: 2,\n    },\n    {\n      description: 'Tiago Almeida',\n      value: 4,\n    },\n    {\n      description: 'Tiago Almeida',\n      value: 3,\n    },\n  ];\n\n  const { addToast } = useToast();\n\n  const handleSubmit = useCallback(\n    async (data: FormData) => {\n      formRef.current?.setErrors({});\n      try {\n        const schema = Yup.object().shape({\n          taxpayer: Yup.string().required(\n            'Obrigatório Informar o contribuinte.',\n          ),\n          coins: Yup.number().required(\n            'Obritório informar um valor de moedas para prosseguir com a doação',\n          ),\n          comment: Yup.string().required(\n            'Obrigatório informar um comentário para prosseguir com a doação',\n          ),\n          hashtag: Yup.string().required(\n            'Obrigatório informar um hashtag para prosseguir com lançamento',\n          ),\n        });\n\n        await schema.validate(data);\n        addToast({\n          title: 'Doação realizada com sucesso.',\n          type: 'success',\n        });\n      } catch (err) {\n        if (err instanceof Yup.ValidationError) {\n          const errors = getValidationErrors(err);\n          formRef.current?.setErrors(errors);\n          return;\n        }\n        addToast({\n          title: 'Houve um erro na doação de coins.',\n          type: 'error',\n          description:\n            'Verifique houve um erro ao tentar realizar a doação dos coins',\n        });\n      }\n    },\n    [addToast],\n  );\n\n  return (\n    <Container>\n      <Content>\n        <Title>\n          <strong>Ola, Fulano de Tal.</strong>\n          <p>Você possui 500 coins para doar</p>\n        </Title>\n        <Form ref={formRef} onSubmit={handleSubmit}>\n          <Select\n            name=\"taxpayer\"\n            classNameContainer=\"taxpayer\"\n            data={taxpayer}\n            icon={FaIdBadge}\n          />\n          <Input\n            type=\"number\"\n            name=\"coins\"\n            placeholder=\"Coins\"\n            icon={FaCoins}\n            classNameContainer=\"coins\"\n          />\n          <TextArea\n            name=\"comment\"\n            classNameContainer=\"comment\"\n            placeholder=\"Comentário\"\n          />\n          <TextArea\n            name=\"hashtag\"\n            classNameContainer=\"hashtag\"\n            placeholder=\"HashTag\"\n          />\n          <Button type=\"submit\" buttonType=\"success\">\n            Doar\n          </Button>\n        </Form>\n      </Content>\n    </Container>\n  );\n};\n\nexport default DonateCoins;\n"]},"metadata":{},"sourceType":"module"}