{"ast":null,"code":"export default function getValidationErrors(err) {\n  const validationErrors = {};\n  const {\n    inner\n  } = err;\n  inner.forEach(error => {\n    if (error.path) {\n      validationErrors[error.path] = error.message;\n    }\n  });\n  return validationErrors;\n}","map":{"version":3,"sources":["/media/michele/Acer/Users/miche/Desktop/PROJETOS/meritial/web/src/util/getValidationErrors.ts"],"names":["getValidationErrors","err","validationErrors","inner","forEach","error","path","message"],"mappings":"AAMA,eAAe,SAASA,mBAAT,CAA6BC,GAA7B,EAA2D;AACxE,QAAMC,gBAAwB,GAAG,EAAjC;AAEA,QAAM;AAAEC,IAAAA;AAAF,MAAYF,GAAlB;AACAE,EAAAA,KAAK,CAACC,OAAN,CAAcC,KAAK,IAAI;AACrB,QAAIA,KAAK,CAACC,IAAV,EAAgB;AACdJ,MAAAA,gBAAgB,CAACG,KAAK,CAACC,IAAP,CAAhB,GAA+BD,KAAK,CAACE,OAArC;AACD;AACF,GAJD;AAMA,SAAOL,gBAAP;AACD","sourcesContent":["import { ValidationError } from 'yup';\n\ninterface Errors {\n  [Key: string]: string;\n}\n\nexport default function getValidationErrors(err: ValidationError): Errors {\n  const validationErrors: Errors = {};\n\n  const { inner } = err;\n  inner.forEach(error => {\n    if (error.path) {\n      validationErrors[error.path] = error.message;\n    }\n  });\n\n  return validationErrors;\n}\n"]},"metadata":{},"sourceType":"module"}