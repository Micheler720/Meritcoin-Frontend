{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/media/michele/Acer/Users/miche/Desktop/PROJETOS/meritial/web/src/hooks/alert.tsx\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React, { createContext, useCallback, useContext, useState } from 'react';\nimport Alert from '../components/Alert';\nconst AlertContext = /*#__PURE__*/createContext({});\nexport const AlertMessage = ({\n  children\n}) => {\n  _s();\n\n  const [alert, setAlert] = useState({});\n  const addAlert = useCallback(async data => {\n    setAlert(data);\n  }, []);\n  const removeAlert = useCallback(() => {\n    setAlert([]);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(AlertContext.Provider, {\n    value: {\n      addAlert\n    },\n    children: /*#__PURE__*/_jsxDEV(Alert, {\n      message: alert.message,\n      type: alert.type,\n      secundaryButton: alert.secundaryButton,\n      primaryButton: alert.primaryButton,\n      titlePrimaryButton: alert.titlePrimaryButton,\n      titleSecondaryButton: alert.titleSecondaryButton,\n      children: children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n};\n\n_s(AlertMessage, \"JDLc3V4lE7isRCz7apY9e/Z9d1M=\");\n\n_c = AlertMessage;\nexport function useAlert() {\n  _s2();\n\n  const context = useContext(AlertContext);\n\n  if (!context) {\n    throw new Error('useAuth must be used within an AuthProvider.');\n  }\n\n  return context;\n}\n\n_s2(useAlert, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\n\nvar _c;\n\n$RefreshReg$(_c, \"AlertMessage\");","map":{"version":3,"sources":["/media/michele/Acer/Users/miche/Desktop/PROJETOS/meritial/web/src/hooks/alert.tsx"],"names":["React","createContext","useCallback","useContext","useState","Alert","AlertContext","AlertMessage","children","alert","setAlert","addAlert","data","removeAlert","message","type","secundaryButton","primaryButton","titlePrimaryButton","titleSecondaryButton","useAlert","context","Error"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,aAAhB,EAA+BC,WAA/B,EAA4CC,UAA5C,EAAwDC,QAAxD,QAAwE,OAAxE;AACA,OAAOC,KAAP,MAAkB,qBAAlB;AAcA,MAAMC,YAAY,gBAAGL,aAAa,CAAoB,EAApB,CAAlC;AAEA,OAAO,MAAMM,YAAsB,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAkB;AAAA;;AACtD,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBN,QAAQ,CAAW,EAAX,CAAlC;AAEA,QAAMO,QAAQ,GAAGT,WAAW,CAAC,MAAOU,IAAP,IAAyC;AACpEF,IAAAA,QAAQ,CAACE,IAAD,CAAR;AACD,GAF2B,EAEzB,EAFyB,CAA5B;AAIA,QAAMC,WAAW,GAAGX,WAAW,CAAC,MAAM;AACpCQ,IAAAA,QAAQ,CAAC,EAAD,CAAR;AACD,GAF8B,EAE5B,EAF4B,CAA/B;AAIA,sBACE,QAAC,YAAD,CAAc,QAAd;AAAuB,IAAA,KAAK,EAAE;AAAEC,MAAAA;AAAF,KAA9B;AAAA,2BACE,QAAC,KAAD;AACE,MAAA,OAAO,EAAEF,KAAK,CAACK,OADjB;AAEE,MAAA,IAAI,EAAEL,KAAK,CAACM,IAFd;AAGE,MAAA,eAAe,EAAEN,KAAK,CAACO,eAHzB;AAIE,MAAA,aAAa,EAAEP,KAAK,CAACQ,aAJvB;AAKE,MAAA,kBAAkB,EAAER,KAAK,CAACS,kBAL5B;AAME,MAAA,oBAAoB,EAAET,KAAK,CAACU,oBAN9B;AAAA,gBAQGX;AARH;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAcD,CAzBM;;GAAMD,Y;;KAAAA,Y;AA2Bb,OAAO,SAASa,QAAT,GAAoB;AAAA;;AACzB,QAAMC,OAAO,GAAGlB,UAAU,CAACG,YAAD,CAA1B;;AACA,MAAI,CAACe,OAAL,EAAc;AACZ,UAAM,IAAIC,KAAJ,CAAU,8CAAV,CAAN;AACD;;AACD,SAAOD,OAAP;AACD;;IANeD,Q","sourcesContent":["import React, { createContext, useCallback, useContext, useState } from 'react';\nimport Alert from '../components/Alert';\n\ninterface ICreateAlertProps {\n  addAlert(data: IMessage): void;\n}\ninterface IMessage {\n  message: string;\n  type?: 'error' | 'confirmation' | 'alert' | 'success';\n  primaryButton?(): void;\n  secundaryButton?(): void;\n  titlePrimaryButton?: string;\n  titleSecondaryButton?: string;\n}\n\nconst AlertContext = createContext<ICreateAlertProps>({} as ICreateAlertProps);\n\nexport const AlertMessage: React.FC = ({ children }) => {\n  const [alert, setAlert] = useState<IMessage>({} as IMessage);\n\n  const addAlert = useCallback(async (data: IMessage): Promise<void> => {\n    setAlert(data);\n  }, []);\n\n  const removeAlert = useCallback(() => {\n    setAlert([]);\n  }, []);\n\n  return (\n    <AlertContext.Provider value={{ addAlert }}>\n      <Alert\n        message={alert.message}\n        type={alert.type}\n        secundaryButton={alert.secundaryButton}\n        primaryButton={alert.primaryButton}\n        titlePrimaryButton={alert.titlePrimaryButton}\n        titleSecondaryButton={alert.titleSecondaryButton}\n      >\n        {children}\n      </Alert>\n    </AlertContext.Provider>\n  );\n};\n\nexport function useAlert() {\n  const context = useContext(AlertContext);\n  if (!context) {\n    throw new Error('useAuth must be used within an AuthProvider.');\n  }\n  return context;\n}\n"]},"metadata":{},"sourceType":"module"}