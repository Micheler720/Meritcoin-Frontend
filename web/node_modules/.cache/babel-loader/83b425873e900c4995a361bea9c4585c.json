{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/media/michele/Acer/Users/miche/Desktop/PROJETOS/meritial/web/src/components/Alert/index.tsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { FiAlertTriangle } from 'react-icons/fi';\nimport { BiWindowClose } from 'react-icons/bi';\nimport { GiConfirmed } from 'react-icons/gi';\nimport { BsQuestionCircleFill } from 'react-icons/bs';\nimport { Container, Content, BackgroundTransparent } from './styles';\nimport Button from '../Button';\nimport { useAlert } from '../../hooks/alert';\nconst alertIcon = {\n  alert: /*#__PURE__*/_jsxDEV(FiAlertTriangle, {\n    size: 65,\n    color: \"#ffff00\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 10\n  }, this),\n  error: /*#__PURE__*/_jsxDEV(BiWindowClose, {\n    size: 65,\n    color: \"#c53030\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 10\n  }, this),\n  confirmation: /*#__PURE__*/_jsxDEV(BsQuestionCircleFill, {\n    size: 65,\n    color: \"#0A02AD\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 17\n  }, this),\n  success: /*#__PURE__*/_jsxDEV(GiConfirmed, {\n    size: 65,\n    color: \"#008000\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 12\n  }, this)\n};\n\nconst Alert = ({\n  message,\n  type,\n  children\n}) => {\n  _s();\n\n  const {\n    addAlert\n  } = useAlert();\n\n  if (message === undefined) {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: children\n    }, void 0, false);\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(BackgroundTransparent, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Container, {\n      children: /*#__PURE__*/_jsxDEV(Content, {\n        children: [type ? alertIcon[type] : alertIcon.alert, /*#__PURE__*/_jsxDEV(\"span\", {\n          children: message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"footer\", {\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            buttonType: \"success\",\n            type: \"button\",\n            onClick: () => {\n              alertConfirm(true);\n            },\n            children: \"Ok\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            buttonType: \"error\",\n            type: \"button\",\n            onClick: () => {\n              alertConfirm(false);\n            },\n            children: \"Cancelar\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), children]\n  }, void 0, true);\n};\n\n_s(Alert, \"LhnkJ0/7KT1gSARNN2O0nbd3bfI=\", false, function () {\n  return [useAlert];\n});\n\n_c = Alert;\nexport default Alert;\n\nvar _c;\n\n$RefreshReg$(_c, \"Alert\");","map":{"version":3,"sources":["/media/michele/Acer/Users/miche/Desktop/PROJETOS/meritial/web/src/components/Alert/index.tsx"],"names":["React","FiAlertTriangle","BiWindowClose","GiConfirmed","BsQuestionCircleFill","Container","Content","BackgroundTransparent","Button","useAlert","alertIcon","alert","error","confirmation","success","Alert","message","type","children","addAlert","undefined","alertConfirm"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,eAAT,QAAgC,gBAAhC;AACA,SAASC,aAAT,QAA8B,gBAA9B;AACA,SAASC,WAAT,QAA4B,gBAA5B;AACA,SAASC,oBAAT,QAAqC,gBAArC;AACA,SAASC,SAAT,EAAoBC,OAApB,EAA6BC,qBAA7B,QAA0D,UAA1D;AACA,OAAOC,MAAP,MAAmB,WAAnB;AACA,SAASC,QAAT,QAAyB,mBAAzB;AAMA,MAAMC,SAAS,GAAG;AAChBC,EAAAA,KAAK,eAAE,QAAC,eAAD;AAAiB,IAAA,IAAI,EAAE,EAAvB;AAA2B,IAAA,KAAK,EAAC;AAAjC;AAAA;AAAA;AAAA;AAAA,UADS;AAEhBC,EAAAA,KAAK,eAAE,QAAC,aAAD;AAAe,IAAA,IAAI,EAAE,EAArB;AAAyB,IAAA,KAAK,EAAC;AAA/B;AAAA;AAAA;AAAA;AAAA,UAFS;AAGhBC,EAAAA,YAAY,eAAE,QAAC,oBAAD;AAAsB,IAAA,IAAI,EAAE,EAA5B;AAAgC,IAAA,KAAK,EAAC;AAAtC;AAAA;AAAA;AAAA;AAAA,UAHE;AAIhBC,EAAAA,OAAO,eAAE,QAAC,WAAD;AAAa,IAAA,IAAI,EAAE,EAAnB;AAAuB,IAAA,KAAK,EAAC;AAA7B;AAAA;AAAA;AAAA;AAAA;AAJO,CAAlB;;AAOA,MAAMC,KAA4B,GAAG,CAAC;AAAEC,EAAAA,OAAF;AAAWC,EAAAA,IAAX;AAAiBC,EAAAA;AAAjB,CAAD,KAAiC;AAAA;;AACpE,QAAM;AAAEC,IAAAA;AAAF,MAAeV,QAAQ,EAA7B;;AAEA,MAAIO,OAAO,KAAKI,SAAhB,EAA2B;AACzB,wBAAO;AAAA,gBAAGF;AAAH,qBAAP;AACD;;AACD,sBACE;AAAA,4BACE,QAAC,qBAAD;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,SAAD;AAAA,6BACE,QAAC,OAAD;AAAA,mBACGD,IAAI,GAAGP,SAAS,CAACO,IAAD,CAAZ,GAAqBP,SAAS,CAACC,KADtC,eAEE;AAAA,oBAAOK;AAAP;AAAA;AAAA;AAAA;AAAA,gBAFF,eAGE;AAAA,kCACE,QAAC,MAAD;AACE,YAAA,UAAU,EAAC,SADb;AAEE,YAAA,IAAI,EAAC,QAFP;AAGE,YAAA,OAAO,EAAE,MAAM;AACbK,cAAAA,YAAY,CAAC,IAAD,CAAZ;AACD,aALH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAUE,QAAC,MAAD;AACE,YAAA,UAAU,EAAC,OADb;AAEE,YAAA,IAAI,EAAC,QAFP;AAGE,YAAA,OAAO,EAAE,MAAM;AACbA,cAAAA,YAAY,CAAC,KAAD,CAAZ;AACD,aALH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAVF;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAFF,EA4BGH,QA5BH;AAAA,kBADF;AAgCD,CAtCD;;GAAMH,K;UACiBN,Q;;;KADjBM,K;AAwCN,eAAeA,KAAf","sourcesContent":["import React from 'react';\nimport { FiAlertTriangle } from 'react-icons/fi';\nimport { BiWindowClose } from 'react-icons/bi';\nimport { GiConfirmed } from 'react-icons/gi';\nimport { BsQuestionCircleFill } from 'react-icons/bs';\nimport { Container, Content, BackgroundTransparent } from './styles';\nimport Button from '../Button';\nimport { useAlert } from '../../hooks/alert';\n\ninterface AlertsProps {\n  message: string;\n  type?: 'error' | 'confirmation' | 'alert' | 'success';\n}\nconst alertIcon = {\n  alert: <FiAlertTriangle size={65} color=\"#ffff00\" />,\n  error: <BiWindowClose size={65} color=\"#c53030\" />,\n  confirmation: <BsQuestionCircleFill size={65} color=\"#0A02AD\" />,\n  success: <GiConfirmed size={65} color=\"#008000\" />,\n};\n\nconst Alert: React.FC<AlertsProps> = ({ message, type, children }) => {\n  const { addAlert } = useAlert();\n\n  if (message === undefined) {\n    return <>{children}</>;\n  }\n  return (\n    <>\n      <BackgroundTransparent />\n      <Container>\n        <Content>\n          {type ? alertIcon[type] : alertIcon.alert}\n          <span>{message}</span>\n          <footer>\n            <Button\n              buttonType=\"success\"\n              type=\"button\"\n              onClick={() => {\n                alertConfirm(true);\n              }}\n            >\n              Ok\n            </Button>\n            <Button\n              buttonType=\"error\"\n              type=\"button\"\n              onClick={() => {\n                alertConfirm(false);\n              }}\n            >\n              Cancelar\n            </Button>\n          </footer>\n        </Content>\n      </Container>\n      {children}\n    </>\n  );\n};\n\nexport default Alert;\n"]},"metadata":{},"sourceType":"module"}