{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/media/michele/Acer/Users/miche/Desktop/PROJETOS/meritial/web/src/components/Table/index.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { TableStyle, Pagination } from './styles';\n\nconst Table = ({\n  limitPerPage,\n  totalItens,\n  children\n}) => {\n  _s();\n\n  const [pageCurrent, setPageCurrent] = useState(1);\n  const [pages, setPages] = useState([]);\n  useEffect(() => {\n    async function loadProducts() {\n      if (totalItens && limitPerPage) {\n        const totalPages = Math.ceil(totalItens / limitPerPage);\n        const arrayPages = [];\n        console.log(`Total Pages${totalPages}`);\n\n        for (let i = 1; i <= totalPages; i + 1) {\n          console.log(`Contador ${i}`);\n          arrayPages.push(i);\n        }\n\n        setPages(arrayPages);\n      }\n    }\n\n    loadProducts();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(TableStyle, {\n      children: children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Pagination, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"Qtd:\", totalItens]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this), pages.map(page => /*#__PURE__*/_jsxDEV(\"span\", {\n        children: page\n      }, page, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(Table, \"dk5j2brCuYee3JY0h843FaI3nIM=\");\n\n_c = Table;\nexport default Table;\n\nvar _c;\n\n$RefreshReg$(_c, \"Table\");","map":{"version":3,"sources":["/media/michele/Acer/Users/miche/Desktop/PROJETOS/meritial/web/src/components/Table/index.tsx"],"names":["React","useEffect","useState","TableStyle","Pagination","Table","limitPerPage","totalItens","children","pageCurrent","setPageCurrent","pages","setPages","loadProducts","totalPages","Math","ceil","arrayPages","console","log","i","push","map","page"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAAoCC,QAApC,QAAoD,OAApD;AAEA,SAASC,UAAT,EAAqBC,UAArB,QAAuC,UAAvC;;AAOA,MAAMC,KAA2B,GAAG,CAAC;AACnCC,EAAAA,YADmC;AAEnCC,EAAAA,UAFmC;AAGnCC,EAAAA;AAHmC,CAAD,KAI9B;AAAA;;AACJ,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCR,QAAQ,CAAC,CAAD,CAA9C;AACA,QAAM,CAACS,KAAD,EAAQC,QAAR,IAAoBV,QAAQ,CAAmB,EAAnB,CAAlC;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACd,mBAAeY,YAAf,GAA8B;AAC5B,UAAIN,UAAU,IAAID,YAAlB,EAAgC;AAC9B,cAAMQ,UAAU,GAAGC,IAAI,CAACC,IAAL,CAAUT,UAAU,GAAGD,YAAvB,CAAnB;AAEA,cAAMW,UAAU,GAAG,EAAnB;AACAC,QAAAA,OAAO,CAACC,GAAR,CAAa,cAAaL,UAAW,EAArC;;AACA,aAAK,IAAIM,CAAC,GAAG,CAAb,EAAgBA,CAAC,IAAIN,UAArB,EAAiCM,CAAC,GAAG,CAArC,EAAwC;AACtCF,UAAAA,OAAO,CAACC,GAAR,CAAa,YAAWC,CAAE,EAA1B;AACAH,UAAAA,UAAU,CAACI,IAAX,CAAgBD,CAAhB;AACD;;AAEDR,QAAAA,QAAQ,CAACK,UAAD,CAAR;AACD;AACF;;AAEDJ,IAAAA,YAAY;AACb,GAjBQ,EAiBN,EAjBM,CAAT;AAmBA,sBACE;AAAA,4BACE,QAAC,UAAD;AAAA,gBAAaL;AAAb;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,UAAD;AAAA,8BACE;AAAA,2BAEGD,UAFH;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,EAKGI,KAAK,CAACW,GAAN,CAAUC,IAAI,iBACb;AAAA,kBAAkBA;AAAlB,SAAWA,IAAX;AAAA;AAAA;AAAA;AAAA,cADD,CALH;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA,kBADF;AAcD,CAzCD;;GAAMlB,K;;KAAAA,K;AA2CN,eAAeA,KAAf","sourcesContent":["import React, { useEffect, useMemo, useState } from 'react';\nimport { array } from 'yup/lib/locale';\nimport { TableStyle, Pagination } from './styles';\n\ninterface TableProps {\n  limitPerPage?: number;\n  totalItens?: number;\n}\n\nconst Table: React.FC<TableProps> = ({\n  limitPerPage,\n  totalItens,\n  children,\n}) => {\n  const [pageCurrent, setPageCurrent] = useState(1);\n  const [pages, setPages] = useState<number[] | never>([]);\n\n  useEffect(() => {\n    async function loadProducts() {\n      if (totalItens && limitPerPage) {\n        const totalPages = Math.ceil(totalItens / limitPerPage);\n\n        const arrayPages = [];\n        console.log(`Total Pages${totalPages}`);\n        for (let i = 1; i <= totalPages; i + 1) {\n          console.log(`Contador ${i}`);\n          arrayPages.push(i);\n        }\n\n        setPages(arrayPages);\n      }\n    }\n\n    loadProducts();\n  }, []);\n\n  return (\n    <>\n      <TableStyle>{children}</TableStyle>\n      <Pagination>\n        <div>\n          Qtd:\n          {totalItens}\n        </div>\n        {pages.map(page => (\n          <span key={page}>{page}</span>\n        ))}\n      </Pagination>\n    </>\n  );\n};\n\nexport default Table;\n"]},"metadata":{},"sourceType":"module"}